2018-11-04 17:52:02.245 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-04 17:52:02.277 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-04 17:52:02.279 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-04 17:52:02.279 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-04 17:52:02.280 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-04 17:52:02.280 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-04 17:52:22.991 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 17:52:22.998 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 17:52:22.998 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 17:52:23.027 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 17:52:23.141 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 17:52:23.141 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 17:52:23.144 +08:00 [DBG] Start discovery request
2018-11-04 17:52:23.217 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 17:52:23.220 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 17:52:23.220 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 17:52:23.223 +08:00 [DBG] Start authorize request
2018-11-04 17:52:23.235 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 17:52:23.240 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 17:52:23.250 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 17:52:23.260 +08:00 [ERR] Invalid redirect_uri: http://localhost:7003/home/task
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "RequestedScopes": "",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/home/task",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "963c4121c4df433996256054c887af35",
    "nonce": "e6a88cf2290742adad9d2f075abb16f7"
  }
}
2018-11-04 17:52:23.262 +08:00 [ERR] Request validation failed
2018-11-04 17:52:23.262 +08:00 [INF] {
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "RequestedScopes": "",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/home/task",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "963c4121c4df433996256054c887af35",
    "nonce": "e6a88cf2290742adad9d2f075abb16f7"
  }
}
2018-11-04 17:52:23.278 +08:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLI27CRVKP5J:00000001",
  "TimeStamp": "2018-11-04T09:52:23Z",
  "ProcessId": 16352,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 17:53:16.491 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 17:53:16.492 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 17:53:16.492 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 17:53:16.492 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 17:53:16.492 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 17:53:16.492 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 17:53:16.492 +08:00 [DBG] Start discovery request
2018-11-04 17:53:16.503 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 17:53:16.503 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 17:53:16.503 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 17:53:16.503 +08:00 [DBG] Start authorize request
2018-11-04 17:53:16.504 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 17:53:16.504 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 17:53:16.504 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 17:53:16.504 +08:00 [ERR] Invalid redirect_uri: http://localhost:7003/home/task
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "RequestedScopes": "",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/home/task",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "c01a3f40a0d54099b82d1f5ffe473cf6",
    "nonce": "6e26af165e49494092032d0184649a00"
  }
}
2018-11-04 17:53:16.504 +08:00 [ERR] Request validation failed
2018-11-04 17:53:16.504 +08:00 [INF] {
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "RequestedScopes": "",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/home/task",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "c01a3f40a0d54099b82d1f5ffe473cf6",
    "nonce": "6e26af165e49494092032d0184649a00"
  }
}
2018-11-04 17:53:16.504 +08:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLI27CRVKP5N:00000001",
  "TimeStamp": "2018-11-04T09:53:16Z",
  "ProcessId": 16352,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 17:53:27.824 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 17:53:27.824 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 17:53:27.824 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 17:53:27.824 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 17:53:27.824 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 17:53:27.824 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 17:53:27.824 +08:00 [DBG] Start discovery request
2018-11-04 17:53:27.836 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 17:53:27.836 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 17:53:27.836 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 17:53:27.837 +08:00 [DBG] Start authorize request
2018-11-04 17:53:27.837 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 17:53:27.837 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 17:53:27.837 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 17:53:27.875 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 17:53:27.876 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "4ebabbd2f3ea405eb533f5d4c4cf4edb",
  "Nonce": "4500846082e94a098eaf1fcbb5e13f3b",
  "SessionId": "ad21b47b0c64b1f15c007add2c14b01d",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "4ebabbd2f3ea405eb533f5d4c4cf4edb",
    "nonce": "4500846082e94a098eaf1fcbb5e13f3b"
  }
}
2018-11-04 17:53:29.140 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 17:53:29.145 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 17:53:29.153 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 17:53:29.153 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 17:53:29.342 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 17:53:29.342 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 17:53:29.356 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****H_8A"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****eNOA"
    }
  ],
  "ActivityId": "0HLI27CRVKP5Q:00000001",
  "TimeStamp": "2018-11-04T09:53:29Z",
  "ProcessId": 16352,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 17:53:29.359 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "4ebabbd2f3ea405eb533f5d4c4cf4edb",
  "Scope": "openid profile api1"
}
2018-11-04 17:53:29.571 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 17:53:29.571 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 17:53:29.571 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 17:53:29.571 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 17:53:29.572 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 17:53:29.572 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 17:53:29.572 +08:00 [DBG] Start discovery request
2018-11-04 17:53:29.624 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 17:53:29.624 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 17:53:29.625 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 17:53:29.625 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 17:53:29.625 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 17:53:29.625 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 17:53:29.628 +08:00 [DBG] Start key discovery request
2018-11-04 17:53:29.680 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 17:53:29.681 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 17:53:29.681 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 17:53:29.692 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 17:53:29.692 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 17:53:29.692 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 17:53:29.692 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 17:53:29.694 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 17:53:29.694 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 17:53:29.701 +08:00 [DBG] Start userinfo request
2018-11-04 17:53:29.705 +08:00 [DBG] Bearer token found in header
2018-11-04 17:53:29.764 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 17:53:29.767 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 17:53:29.775 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 17:53:29.779 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541325209,
    "exp": 1541328809,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541323763,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 17:53:29.785 +08:00 [DBG] Creating userinfo response
2018-11-04 17:53:29.789 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 17:53:29.791 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 17:53:29.793 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 17:53:29.794 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 17:53:29.798 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 17:53:29.798 +08:00 [DBG] End userinfo request
2018-11-04 17:53:29.807 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 17:53:29.808 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 17:53:29.808 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 17:53:29.808 +08:00 [DBG] Rendering check session result
2018-11-04 17:53:30.152 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 17:53:30.152 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 17:53:30.152 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 17:53:30.153 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 17:53:30.153 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 17:53:30.153 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 17:53:30.153 +08:00 [DBG] Start discovery request
2018-11-04 17:53:30.173 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 17:53:30.173 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 17:53:30.173 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 17:53:30.173 +08:00 [DBG] Rendering check session result
2018-11-04 17:53:47.874 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 17:53:47.874 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 17:53:47.875 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 17:53:47.875 +08:00 [DBG] Start discovery request
2018-11-04 17:53:48.179 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 17:53:48.179 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 17:53:48.179 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 17:53:48.179 +08:00 [DBG] Start key discovery request
2018-11-04 17:57:37.718 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 17:57:37.718 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 17:57:37.718 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 17:57:37.719 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 17:57:37.719 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 17:57:37.719 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 17:57:37.719 +08:00 [DBG] Start discovery request
2018-11-04 17:57:38.153 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 17:57:38.153 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 17:57:38.153 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 17:57:38.153 +08:00 [DBG] Rendering check session result
2018-11-04 17:57:48.722 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 17:57:48.722 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 17:57:48.722 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 17:57:48.723 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 17:57:48.723 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 17:57:48.723 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 17:57:48.723 +08:00 [DBG] Start discovery request
2018-11-04 17:57:49.063 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 17:57:49.063 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 17:57:49.063 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 17:57:49.063 +08:00 [DBG] Rendering check session result
2018-11-04 18:01:30.253 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 18:01:30.253 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 18:01:30.253 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 18:01:30.253 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 18:01:30.254 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 18:01:30.254 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 18:01:30.254 +08:00 [DBG] Start discovery request
2018-11-04 18:01:30.328 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 18:01:30.328 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 18:01:30.328 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 18:01:30.329 +08:00 [DBG] Rendering check session result
2018-11-04 18:01:34.365 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 18:01:34.367 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 18:01:34.367 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 18:01:34.372 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 18:01:34.377 +08:00 [DBG] Start end session request validation
2018-11-04 18:01:34.384 +08:00 [DBG] Start identity token validation
2018-11-04 18:01:34.386 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 18:01:34.386 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 18:01:34.391 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 18:01:34.392 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541325209,
    "exp": 1541325509,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "4500846082e94a098eaf1fcbb5e13f3b",
    "iat": 1541325209,
    "at_hash": "PAJzbxLyzOr6qGkLJGnxXQ",
    "sid": "ad21b47b0c64b1f15c007add2c14b01d",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541323763,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 18:01:34.395 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMjUyMDksImV4cCI6MTU0MTMyNTUwOSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjQ1MDA4NDYwODJlOTRhMDk4ZWFmMWZjYmI1ZTEzZjNiIiwiaWF0IjoxNTQxMzI1MjA5LCJhdF9oYXNoIjoiUEFKemJ4THl6T3I2cUdrTEpHbnhYUSIsInNpZCI6ImFkMjFiNDdiMGM2NGIxZjE1YzAwN2FkZDJjMTRiMDFkIiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzIzNzYzLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.q3A8pJFKutEuAUKWcQ9D7FRDlvSmuIdbJg_oZxv-d4SeUnEGeVQHL0993Z7khtOGZWOLk400KzTr-cHmDArfVu7QMqCBbtFRSTNLf754SySW8l254oY0HB0xb2O8vyr6MNV_tC8nhr2SUTY6Vd369Bi32e7G2xQCFuRPk-_9xkW5IZKbIxFOihi9fW7U88yk7k9nyHnznrJ11z9O4YH6BQyjCnIm9i4R9Mdc4XiPRld6ojQ87v5331sIoMy4cShqygZlJoOkYV1Sdmd9kOoYY4h6TZ6XF0OXOpYmGOShiPHv5-OSi7tBCv9CptzfFW18C__KKOD8YjxhE6-xqIH_8A",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 18:01:34.396 +08:00 [DBG] Success validating end session request from js
2018-11-04 18:02:22.832 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 18:02:22.832 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 18:02:22.832 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 18:02:22.832 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 18:02:22.833 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 18:02:22.833 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 18:02:22.833 +08:00 [DBG] Start discovery request
2018-11-04 18:02:22.842 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 18:02:22.842 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 18:02:22.842 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 18:02:22.842 +08:00 [DBG] Start authorize request
2018-11-04 18:02:22.842 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 18:02:22.842 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 18:02:22.842 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 18:02:22.842 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 18:02:22.843 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "ce8abbfa191d4a89ad5e59ccab02a477",
  "Nonce": "4a693f65c8504ea2b947ca6b5986f493",
  "SessionId": "ad21b47b0c64b1f15c007add2c14b01d",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "ce8abbfa191d4a89ad5e59ccab02a477",
    "nonce": "4a693f65c8504ea2b947ca6b5986f493"
  }
}
2018-11-04 18:02:22.845 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 18:02:22.845 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 18:02:22.845 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 18:02:22.845 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 18:02:22.852 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 18:02:22.852 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 18:02:22.857 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****5h0A"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****8OgA"
    }
  ],
  "ActivityId": "0HLI27CRVKP68:00000001",
  "TimeStamp": "2018-11-04T10:02:22Z",
  "ProcessId": 16352,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 18:02:22.857 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "ce8abbfa191d4a89ad5e59ccab02a477",
  "Scope": "openid profile api1"
}
2018-11-04 18:02:23.052 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 18:02:23.052 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 18:02:23.052 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 18:02:23.052 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 18:02:23.052 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 18:02:23.052 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 18:02:23.052 +08:00 [DBG] Start discovery request
2018-11-04 18:02:23.105 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 18:02:23.106 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 18:02:23.106 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 18:02:23.106 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 18:02:23.106 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 18:02:23.106 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 18:02:23.106 +08:00 [DBG] Start key discovery request
2018-11-04 18:02:23.164 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 18:02:23.164 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 18:02:23.164 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 18:02:23.176 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 18:02:23.176 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 18:02:23.176 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 18:02:23.177 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 18:02:23.177 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 18:02:23.177 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 18:02:23.177 +08:00 [DBG] Start userinfo request
2018-11-04 18:02:23.177 +08:00 [DBG] Bearer token found in header
2018-11-04 18:02:23.179 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 18:02:23.180 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 18:02:23.183 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 18:02:23.183 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541325742,
    "exp": 1541329342,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541323763,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 18:02:23.183 +08:00 [DBG] Creating userinfo response
2018-11-04 18:02:23.183 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 18:02:23.183 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 18:02:23.183 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 18:02:23.183 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 18:02:23.186 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 18:02:23.186 +08:00 [DBG] End userinfo request
2018-11-04 18:02:23.210 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 18:02:23.210 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 18:02:23.210 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 18:02:23.210 +08:00 [DBG] Rendering check session result
2018-11-04 18:02:23.547 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 18:02:23.547 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 18:02:23.547 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 18:02:23.547 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 18:02:23.547 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 18:02:23.548 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 18:02:23.548 +08:00 [DBG] Start discovery request
2018-11-04 18:02:23.557 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 18:02:23.557 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 18:02:23.557 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 18:02:23.557 +08:00 [DBG] Rendering check session result
2018-11-04 18:17:15.258 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 18:17:15.259 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 18:17:15.259 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 18:17:15.259 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 18:17:15.259 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 18:17:15.259 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 18:17:15.259 +08:00 [DBG] Start discovery request
2018-11-04 18:17:15.663 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 18:17:15.663 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 18:17:15.663 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 18:17:15.663 +08:00 [DBG] Rendering check session result
2018-11-04 18:17:24.199 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 18:17:24.199 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 18:17:24.199 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 18:17:24.199 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 18:17:24.199 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 18:17:24.199 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 18:17:24.199 +08:00 [DBG] Start discovery request
2018-11-04 18:17:24.511 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 18:17:24.511 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 18:17:24.511 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 18:17:24.511 +08:00 [DBG] Rendering check session result
2018-11-04 18:18:47.754 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 18:18:47.754 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 18:18:47.754 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 18:18:47.754 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 18:18:47.755 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 18:18:47.755 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 18:18:47.755 +08:00 [DBG] Start discovery request
2018-11-04 18:18:48.149 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 18:18:48.149 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 18:18:48.149 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 18:18:48.149 +08:00 [DBG] Rendering check session result
2018-11-04 19:05:06.955 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:05:06.956 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:05:06.956 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:05:06.956 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:05:06.956 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:05:06.956 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:05:06.956 +08:00 [DBG] Start discovery request
2018-11-04 19:05:07.350 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:05:07.350 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:05:07.350 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:05:07.350 +08:00 [DBG] Rendering check session result
2018-11-04 19:05:34.607 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:05:34.607 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:05:34.607 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:05:34.607 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:05:34.607 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:05:34.607 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:05:34.607 +08:00 [DBG] Start discovery request
2018-11-04 19:05:35.025 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:05:35.025 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:05:35.026 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:05:35.026 +08:00 [DBG] Rendering check session result
2018-11-04 19:06:45.683 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:06:45.683 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:06:45.683 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:06:45.683 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:06:45.684 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:06:45.684 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:06:45.684 +08:00 [DBG] Start discovery request
2018-11-04 19:06:45.996 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:06:45.996 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:06:45.996 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:06:45.996 +08:00 [DBG] Rendering check session result
2018-11-04 19:10:59.038 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:10:59.038 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:10:59.038 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:10:59.039 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:10:59.039 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:10:59.039 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:10:59.039 +08:00 [DBG] Start discovery request
2018-11-04 19:10:59.367 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:10:59.367 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:10:59.367 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:10:59.367 +08:00 [DBG] Rendering check session result
2018-11-04 19:11:59.845 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:11:59.845 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:11:59.845 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:11:59.845 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:11:59.845 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:11:59.845 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:11:59.845 +08:00 [DBG] Start discovery request
2018-11-04 19:11:59.914 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:11:59.914 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:11:59.914 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:11:59.914 +08:00 [DBG] Rendering check session result
2018-11-04 19:13:02.241 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 19:13:02.242 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 19:13:02.242 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 19:13:02.242 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:13:02.242 +08:00 [DBG] Start end session request validation
2018-11-04 19:13:02.242 +08:00 [DBG] Start identity token validation
2018-11-04 19:13:02.242 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:13:02.242 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 19:13:02.261 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 19:13:02.261 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541325742,
    "exp": 1541326042,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "4a693f65c8504ea2b947ca6b5986f493",
    "iat": 1541325742,
    "at_hash": "C4j3eFsHrJ4lwsUN_ULqyQ",
    "sid": "ad21b47b0c64b1f15c007add2c14b01d",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541323763,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 19:13:02.261 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMjU3NDIsImV4cCI6MTU0MTMyNjA0MiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjRhNjkzZjY1Yzg1MDRlYTJiOTQ3Y2E2YjU5ODZmNDkzIiwiaWF0IjoxNTQxMzI1NzQyLCJhdF9oYXNoIjoiQzRqM2VGc0hySjRsd3NVTl9VTHF5USIsInNpZCI6ImFkMjFiNDdiMGM2NGIxZjE1YzAwN2FkZDJjMTRiMDFkIiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzIzNzYzLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.SrujuJ-OwFNkzI7RvyzO4JXBcL0U6CGe5gy9Lj-R1N8L37_J3gPwLPNAJ7sUJdslmz5AdPT2Hvs67ZCVdTWtxl9UhGgQfcEHVlzLq-vK9uZxiYr94tN_6V2BOcMhdTe9cK7rVHpFXFAc-7SRLP4m4zDrgGOG1xiZC5iyLeRlBaVwcg6ZyCtOkkGNXUVbK3IvCIHiHoOmNrqIAarLbV9-O7dW2696dOx4L_iMahwqJMaIu05CSCjgPizPbmdBbYNz7ho3AOvDCzY6NyQMSscIZsjfVuY8-LROPQSWxuW8RtDlXYafL5e1zETP4kI7AI8aN1KnLvZRR6QMfPlz1G5h0A",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 19:13:02.261 +08:00 [DBG] Success validating end session request from js
2018-11-04 19:13:07.217 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:13:07.217 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:07.217 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:07.217 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:13:07.218 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:13:07.218 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:13:07.218 +08:00 [DBG] Start discovery request
2018-11-04 19:13:07.226 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 19:13:07.226 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 19:13:07.226 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 19:13:07.226 +08:00 [DBG] Start authorize request
2018-11-04 19:13:07.226 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:13:07.226 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 19:13:07.226 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:13:07.226 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 19:13:07.226 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "1d387a4ab6b74f0c9796d754e8f54646",
  "Nonce": "42cbef545aa14e0c82c880ee0088d59c",
  "SessionId": "ad21b47b0c64b1f15c007add2c14b01d",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "1d387a4ab6b74f0c9796d754e8f54646",
    "nonce": "42cbef545aa14e0c82c880ee0088d59c"
  }
}
2018-11-04 19:13:07.228 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 19:13:07.228 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 19:13:07.228 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 19:13:07.228 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:13:07.235 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 19:13:07.236 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 19:13:07.241 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****719Q"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****_PkA"
    }
  ],
  "ActivityId": "0HLI27CRVKP6T:00000004",
  "TimeStamp": "2018-11-04T11:13:07Z",
  "ProcessId": 16352,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 19:13:07.241 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "1d387a4ab6b74f0c9796d754e8f54646",
  "Scope": "openid profile api1"
}
2018-11-04 19:13:07.404 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:13:07.404 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:07.404 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:07.404 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:13:07.405 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:13:07.405 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:13:07.405 +08:00 [DBG] Start discovery request
2018-11-04 19:13:07.463 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 19:13:07.463 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:07.463 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:07.463 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 19:13:07.464 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 19:13:07.464 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 19:13:07.464 +08:00 [DBG] Start key discovery request
2018-11-04 19:13:07.519 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 19:13:07.520 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:07.520 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:07.529 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 19:13:07.529 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:07.529 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:07.529 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 19:13:07.529 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 19:13:07.529 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 19:13:07.529 +08:00 [DBG] Start userinfo request
2018-11-04 19:13:07.529 +08:00 [DBG] Bearer token found in header
2018-11-04 19:13:07.532 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:13:07.532 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:13:07.534 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 19:13:07.534 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541329987,
    "exp": 1541333587,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541323763,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 19:13:07.534 +08:00 [DBG] Creating userinfo response
2018-11-04 19:13:07.534 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:13:07.534 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:13:07.535 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 19:13:07.535 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:13:07.538 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 19:13:07.538 +08:00 [DBG] End userinfo request
2018-11-04 19:13:07.560 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:13:07.560 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:13:07.561 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:13:07.561 +08:00 [DBG] Rendering check session result
2018-11-04 19:13:07.895 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:13:07.895 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:07.895 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:07.895 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:13:07.895 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:13:07.896 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:13:07.896 +08:00 [DBG] Start discovery request
2018-11-04 19:13:07.904 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:13:07.904 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:13:07.904 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:13:07.904 +08:00 [DBG] Rendering check session result
2018-11-04 19:13:51.226 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:13:51.226 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:51.226 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:51.227 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:13:51.227 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:13:51.227 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:13:51.227 +08:00 [DBG] Start discovery request
2018-11-04 19:13:51.235 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 19:13:51.235 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 19:13:51.235 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 19:13:51.235 +08:00 [DBG] Start authorize request
2018-11-04 19:13:51.236 +08:00 [DBG] No user present in authorize request
2018-11-04 19:13:51.236 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 19:13:51.236 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:13:51.236 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 19:13:51.236 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "b70f7ed652974a8784b24b36f89daa55",
  "Nonce": "c69c83d637204b398769ddc61a972f8b",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "b70f7ed652974a8784b24b36f89daa55",
    "nonce": "c69c83d637204b398769ddc61a972f8b"
  }
}
2018-11-04 19:13:51.236 +08:00 [INF] Showing login: User is not authenticated
2018-11-04 19:13:51.293 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 19:13:53.785 +08:00 [DBG] Augmenting SignInContext
2018-11-04 19:13:53.787 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 19:13:53.787 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 19:13:53.787 +08:00 [DBG] Adding auth_time claim with value: 1541330033
2018-11-04 19:13:53.790 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 19:13:53.791 +08:00 [INF] User logged in.
2018-11-04 19:13:53.797 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-11-04 19:13:53.799 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-11-04 19:13:53.799 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-11-04 19:13:53.803 +08:00 [DBG] Start authorize callback request
2018-11-04 19:13:53.806 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:13:53.806 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 19:13:53.806 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:13:53.806 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 19:13:53.806 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "b70f7ed652974a8784b24b36f89daa55",
  "Nonce": "c69c83d637204b398769ddc61a972f8b",
  "SessionId": "1834bc0af4e0f4837fe7e5a7ead2b174",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "b70f7ed652974a8784b24b36f89daa55",
    "nonce": "c69c83d637204b398769ddc61a972f8b"
  }
}
2018-11-04 19:13:53.808 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 19:13:53.808 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 19:13:53.808 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 19:13:53.808 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:13:53.812 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 19:13:53.812 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 19:13:53.816 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****3uzg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****objw"
    }
  ],
  "ActivityId": "0HLI27CRVKP73:00000005",
  "TimeStamp": "2018-11-04T11:13:53Z",
  "ProcessId": 16352,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 19:13:53.816 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "b70f7ed652974a8784b24b36f89daa55",
  "Scope": "openid profile api1"
}
2018-11-04 19:13:53.821 +08:00 [DBG] Augmenting SignInContext
2018-11-04 19:13:53.821 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 19:13:53.960 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:13:53.960 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:53.961 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:53.961 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:13:53.961 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:13:53.961 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:13:53.961 +08:00 [DBG] Start discovery request
2018-11-04 19:13:54.014 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 19:13:54.015 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:54.015 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:54.015 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 19:13:54.015 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 19:13:54.015 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 19:13:54.015 +08:00 [DBG] Start key discovery request
2018-11-04 19:13:54.076 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 19:13:54.076 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:54.076 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:54.086 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 19:13:54.086 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:54.086 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:54.086 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 19:13:54.087 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 19:13:54.087 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 19:13:54.087 +08:00 [DBG] Start userinfo request
2018-11-04 19:13:54.087 +08:00 [DBG] Bearer token found in header
2018-11-04 19:13:54.089 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:13:54.089 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:13:54.092 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 19:13:54.092 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541330033,
    "exp": 1541333633,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541330033,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 19:13:54.092 +08:00 [DBG] Creating userinfo response
2018-11-04 19:13:54.092 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:13:54.092 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:13:54.092 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 19:13:54.092 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:13:54.095 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 19:13:54.095 +08:00 [DBG] End userinfo request
2018-11-04 19:13:54.118 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:13:54.118 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:13:54.119 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:13:54.119 +08:00 [DBG] Rendering check session result
2018-11-04 19:13:54.381 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:13:54.382 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:13:54.382 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:13:54.382 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:13:54.382 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:13:54.382 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:13:54.382 +08:00 [DBG] Start discovery request
2018-11-04 19:13:54.391 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:13:54.391 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:13:54.391 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:13:54.391 +08:00 [DBG] Rendering check session result
2018-11-04 19:16:01.735 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:16:01.735 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:16:01.735 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:16:01.735 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:16:01.736 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:16:01.736 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:16:01.736 +08:00 [DBG] Start discovery request
2018-11-04 19:16:01.995 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:16:01.996 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:16:01.996 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:16:01.996 +08:00 [DBG] Rendering check session result
2018-11-04 19:20:22.143 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:20:22.143 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:20:22.143 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:20:22.143 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:20:22.143 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:20:22.144 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:20:22.144 +08:00 [DBG] Start discovery request
2018-11-04 19:20:22.547 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:20:22.547 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:20:22.547 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:20:22.547 +08:00 [DBG] Rendering check session result
2018-11-04 19:21:26.284 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:21:26.284 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:21:26.284 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:21:26.284 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:21:26.284 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:21:26.284 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:21:26.284 +08:00 [DBG] Start discovery request
2018-11-04 19:21:26.669 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:21:26.669 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:21:26.669 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:21:26.669 +08:00 [DBG] Rendering check session result
2018-11-04 19:25:16.134 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:25:16.134 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:25:16.134 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:25:16.134 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:25:16.135 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:25:16.135 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:25:16.135 +08:00 [DBG] Start discovery request
2018-11-04 19:25:16.492 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:25:16.492 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:25:16.492 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:25:16.493 +08:00 [DBG] Rendering check session result
2018-11-04 19:25:23.847 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 19:25:23.847 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 19:25:23.847 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 19:25:23.847 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:25:23.848 +08:00 [DBG] Start end session request validation
2018-11-04 19:25:23.848 +08:00 [DBG] Start identity token validation
2018-11-04 19:25:23.848 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:25:23.848 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 19:25:23.861 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 19:25:23.861 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541330033,
    "exp": 1541330333,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "c69c83d637204b398769ddc61a972f8b",
    "iat": 1541330033,
    "at_hash": "Y4FaE8Alre9wRZnsF7rlXw",
    "sid": "1834bc0af4e0f4837fe7e5a7ead2b174",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541330033,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 19:25:23.862 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzAwMzMsImV4cCI6MTU0MTMzMDMzMywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6ImM2OWM4M2Q2MzcyMDRiMzk4NzY5ZGRjNjFhOTcyZjhiIiwiaWF0IjoxNTQxMzMwMDMzLCJhdF9oYXNoIjoiWTRGYUU4QWxyZTl3Ulpuc0Y3cmxYdyIsInNpZCI6IjE4MzRiYzBhZjRlMGY0ODM3ZmU3ZTVhN2VhZDJiMTc0Iiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzMwMDMzLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.qbuRduOvaVYWYKUn6ReoZYDLA6DK_AgXMD5jAI-hYJbnvePYKH1g6wjOhnkyHt90lsc4chLgwZ0Lrd4YCDPkNIYQz1GZObgc0D7gv6jo_ARE6qEaZb4Pdvz27JlZ-dX95JZj8xV2Y6rhOEtLNsCUszz9WpqphE0UX4VDa9ksTtBt921LLvJ2qQTqW7uKLWKMa67qHoI22IKPjFP8FigfprDjgyUxji4-kcMSyvuugdqQGxWfh5uEAIOkEntvs6XJ3lk5ArPZmHfdNNwVYbj5NpKfPRiYNeft-8PgZ3xQs7kk7VmsJYbfoivasLF6njFdxLUOf03UlMakKIOCQ73uzg",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 19:25:23.862 +08:00 [DBG] Success validating end session request from js
2018-11-04 19:27:22.420 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:27:22.420 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:27:22.420 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:27:22.420 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:27:22.421 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:27:22.421 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:27:22.421 +08:00 [DBG] Start discovery request
2018-11-04 19:27:22.433 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 19:27:22.433 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 19:27:22.433 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 19:27:22.433 +08:00 [DBG] Start authorize request
2018-11-04 19:27:22.434 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:27:22.434 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 19:27:22.434 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:27:22.434 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 19:27:22.434 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "65a4c8c09f8541c0a8958582777fd6cd",
  "Nonce": "640b4118973c4a7d84ce4a63269bf10c",
  "SessionId": "1834bc0af4e0f4837fe7e5a7ead2b174",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "65a4c8c09f8541c0a8958582777fd6cd",
    "nonce": "640b4118973c4a7d84ce4a63269bf10c"
  }
}
2018-11-04 19:27:22.436 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 19:27:22.436 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 19:27:22.436 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 19:27:22.437 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:27:22.448 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 19:27:22.448 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 19:27:22.453 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****T1wA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****RytA"
    }
  ],
  "ActivityId": "0HLI27CRVKP7I:00000001",
  "TimeStamp": "2018-11-04T11:27:22Z",
  "ProcessId": 16352,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 19:27:22.453 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "65a4c8c09f8541c0a8958582777fd6cd",
  "Scope": "openid profile api1"
}
2018-11-04 19:27:22.600 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:27:22.600 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:27:22.600 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:27:22.600 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:27:22.600 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:27:22.600 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:27:22.600 +08:00 [DBG] Start discovery request
2018-11-04 19:27:22.654 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 19:27:22.654 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:27:22.654 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:27:22.654 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 19:27:22.654 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 19:27:22.654 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 19:27:22.654 +08:00 [DBG] Start key discovery request
2018-11-04 19:27:22.719 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 19:27:22.719 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:27:22.720 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:27:22.731 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 19:27:22.731 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:27:22.731 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:27:22.731 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 19:27:22.732 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 19:27:22.732 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 19:27:22.732 +08:00 [DBG] Start userinfo request
2018-11-04 19:27:22.732 +08:00 [DBG] Bearer token found in header
2018-11-04 19:27:22.736 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:27:22.736 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:27:22.738 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 19:27:22.738 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541330842,
    "exp": 1541334442,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541330033,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 19:27:22.738 +08:00 [DBG] Creating userinfo response
2018-11-04 19:27:22.738 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:27:22.738 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:27:22.738 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 19:27:22.738 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:27:22.741 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 19:27:22.741 +08:00 [DBG] End userinfo request
2018-11-04 19:27:22.767 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:27:22.768 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:27:22.768 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:27:22.768 +08:00 [DBG] Rendering check session result
2018-11-04 19:27:23.190 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:27:23.190 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:27:23.190 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:27:23.190 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:27:23.191 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:27:23.191 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:27:23.191 +08:00 [DBG] Start discovery request
2018-11-04 19:27:23.223 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:27:23.223 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:27:23.223 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:27:23.223 +08:00 [DBG] Rendering check session result
2018-11-04 19:27:43.747 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:27:43.747 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:27:43.747 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:27:43.747 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:27:43.747 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:27:43.747 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:27:43.747 +08:00 [DBG] Start discovery request
2018-11-04 19:27:44.030 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:27:44.031 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:27:44.031 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:27:44.032 +08:00 [DBG] Rendering check session result
2018-11-04 19:29:45.404 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:29:45.404 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:29:45.404 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:29:45.404 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:29:45.404 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:29:45.404 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:29:45.404 +08:00 [DBG] Start discovery request
2018-11-04 19:29:45.812 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:29:45.812 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:29:45.812 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:29:45.812 +08:00 [DBG] Rendering check session result
2018-11-04 19:31:25.895 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:31:25.895 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:31:25.895 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:31:25.896 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:31:25.896 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:31:25.896 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:31:25.896 +08:00 [DBG] Start discovery request
2018-11-04 19:31:26.307 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:31:26.307 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:31:26.308 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:31:26.308 +08:00 [DBG] Rendering check session result
2018-11-04 19:35:33.208 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 19:35:33.208 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 19:35:33.208 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 19:35:33.208 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:35:33.208 +08:00 [DBG] Start end session request validation
2018-11-04 19:35:33.208 +08:00 [DBG] Start identity token validation
2018-11-04 19:35:33.208 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:35:33.208 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 19:35:33.230 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 19:35:33.231 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541330842,
    "exp": 1541331142,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "640b4118973c4a7d84ce4a63269bf10c",
    "iat": 1541330842,
    "at_hash": "oUFeX1Ntjg7ICSJyfc46yQ",
    "sid": "1834bc0af4e0f4837fe7e5a7ead2b174",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541330033,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 19:35:33.231 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzA4NDIsImV4cCI6MTU0MTMzMTE0MiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjY0MGI0MTE4OTczYzRhN2Q4NGNlNGE2MzI2OWJmMTBjIiwiaWF0IjoxNTQxMzMwODQyLCJhdF9oYXNoIjoib1VGZVgxTnRqZzdJQ1NKeWZjNDZ5USIsInNpZCI6IjE4MzRiYzBhZjRlMGY0ODM3ZmU3ZTVhN2VhZDJiMTc0Iiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzMwMDMzLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.f8Iuc1oNwYCmsUI_UNpfPy5eIYIj_SciQ2CKPRyHw6Dy6MbEaoZXLRapxVYXCh8rYd7pEf0XKHKIIlFLbi2_LWGybSXJvYDbllEvohs0eiAl79uJe_tYxcdDIvf7_CVZy6xXiTKk9uUNjDlw13RvNpqS2bkW_3T1cQzH6d9au7B9AOKuZAfENWls9nyVNtFB-dWX6MQef5GcdIQVzt37ItlIBIZnvDRzkoAcIme9UyxzCXQNArpXLCx91oRLvHa5gWfvk9Tlb8WHZMFqJ37OeTBu3oodigtJm-IO3fgzNnm2AtjDWcwMD0jQ86m9hkt8BQQXRj_IQWTpL7nynyT1wA",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 19:35:33.231 +08:00 [DBG] Success validating end session request from js
2018-11-04 19:38:24.417 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:38:24.417 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:38:24.417 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:38:24.417 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:38:24.417 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:38:24.417 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:38:24.418 +08:00 [DBG] Start discovery request
2018-11-04 19:38:24.431 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 19:38:24.431 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 19:38:24.431 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 19:38:24.431 +08:00 [DBG] Start authorize request
2018-11-04 19:38:24.431 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:38:24.431 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 19:38:24.431 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:38:24.432 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 19:38:24.432 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "3dc932d0d82d414e82e3009c030934cd",
  "Nonce": "f795258df32e4b61a33567783c8a0b9e",
  "SessionId": "1834bc0af4e0f4837fe7e5a7ead2b174",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "3dc932d0d82d414e82e3009c030934cd",
    "nonce": "f795258df32e4b61a33567783c8a0b9e"
  }
}
2018-11-04 19:38:24.434 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 19:38:24.434 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 19:38:24.435 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 19:38:24.435 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:38:24.447 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 19:38:24.447 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 19:38:24.454 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****jhaA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****5VmA"
    }
  ],
  "ActivityId": "0HLI27CRVKP7U:00000001",
  "TimeStamp": "2018-11-04T11:38:24Z",
  "ProcessId": 16352,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 19:38:24.454 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "3dc932d0d82d414e82e3009c030934cd",
  "Scope": "openid profile api1"
}
2018-11-04 19:38:24.599 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:38:24.599 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:38:24.599 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:38:24.600 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:38:24.600 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:38:24.600 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:38:24.600 +08:00 [DBG] Start discovery request
2018-11-04 19:38:24.651 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 19:38:24.651 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:38:24.651 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:38:24.651 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 19:38:24.651 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 19:38:24.651 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 19:38:24.652 +08:00 [DBG] Start key discovery request
2018-11-04 19:38:24.710 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 19:38:24.710 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:38:24.710 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:38:24.716 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 19:38:24.716 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:38:24.716 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:38:24.716 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 19:38:24.716 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 19:38:24.716 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 19:38:24.716 +08:00 [DBG] Start userinfo request
2018-11-04 19:38:24.716 +08:00 [DBG] Bearer token found in header
2018-11-04 19:38:24.719 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:38:24.719 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:38:24.721 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 19:38:24.721 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541331504,
    "exp": 1541335104,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541330033,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 19:38:24.721 +08:00 [DBG] Creating userinfo response
2018-11-04 19:38:24.721 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:38:24.721 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:38:24.721 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 19:38:24.721 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:38:24.723 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 19:38:24.723 +08:00 [DBG] End userinfo request
2018-11-04 19:38:24.745 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:38:24.745 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:38:24.745 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:38:24.745 +08:00 [DBG] Rendering check session result
2018-11-04 19:38:25.147 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:38:25.147 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:38:25.147 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:38:25.147 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:38:25.147 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:38:25.147 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:38:25.147 +08:00 [DBG] Start discovery request
2018-11-04 19:38:25.559 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:38:25.559 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:38:25.559 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:38:25.559 +08:00 [DBG] Rendering check session result
2018-11-04 19:38:33.881 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 19:38:33.881 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 19:38:33.881 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 19:38:33.881 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:38:33.881 +08:00 [DBG] Start end session request validation
2018-11-04 19:38:33.881 +08:00 [DBG] Start identity token validation
2018-11-04 19:38:33.881 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:38:33.881 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 19:38:33.885 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 19:38:33.885 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541331504,
    "exp": 1541331804,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "f795258df32e4b61a33567783c8a0b9e",
    "iat": 1541331504,
    "at_hash": "zOEY9PmksYwgL9AwQN3H6g",
    "sid": "1834bc0af4e0f4837fe7e5a7ead2b174",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541330033,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 19:38:33.885 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzE1MDQsImV4cCI6MTU0MTMzMTgwNCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6ImY3OTUyNThkZjMyZTRiNjFhMzM1Njc3ODNjOGEwYjllIiwiaWF0IjoxNTQxMzMxNTA0LCJhdF9oYXNoIjoiek9FWTlQbWtzWXdnTDlBd1FOM0g2ZyIsInNpZCI6IjE4MzRiYzBhZjRlMGY0ODM3ZmU3ZTVhN2VhZDJiMTc0Iiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzMwMDMzLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.wPiQiyeyvzA1g1AwHoIuLTqt5lgqiUjezJ4c6iFOOJUKv4LrZNFbB5mmC-VFgQ3JGzA96InNspiCDCzfOoOfeJKLQd27DDnFdvNs9Zu4Bay3dFfnJ5WYuaabZRBXbWQnBAyLxGo0AvSHt_sEXzd0ZH6GSXvnnKTuhoQK-ykTbm6ci0Y-KGHIvzOZj1A5jx326i65gelmUe_IOp4JerxXAlX5DVV84MD6YHc6cQctMKORB1tjg6LUfQwto_qLU3rVbljPkZW9k5Ey9WKPYPWyWxhtBLu8n0kuCo5v01WxsUv_C9_-Elogz4DyWiRnT8HGL9r9UCr5ap9AgL0ZMxjhaA",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 19:38:33.885 +08:00 [DBG] Success validating end session request from js
2018-11-04 19:49:17.760 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-04 19:49:17.788 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-04 19:49:17.790 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-04 19:49:17.790 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-04 19:49:17.791 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-04 19:49:17.791 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-04 19:49:29.692 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:49:29.697 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:49:29.697 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:49:29.721 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:49:29.981 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:49:29.981 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:49:29.983 +08:00 [DBG] Start discovery request
2018-11-04 19:49:31.514 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 19:49:31.517 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 19:49:31.517 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 19:49:31.520 +08:00 [DBG] Start authorize request
2018-11-04 19:49:31.529 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:49:31.536 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 19:49:31.545 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:49:31.574 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 19:49:31.585 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "4f3249864e974304922a4332283b4cc9",
  "Nonce": "aeb3565af6814fbaa4234410782bb60d",
  "SessionId": "1834bc0af4e0f4837fe7e5a7ead2b174",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "4f3249864e974304922a4332283b4cc9",
    "nonce": "aeb3565af6814fbaa4234410782bb60d"
  }
}
2018-11-04 19:49:31.601 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 19:49:31.606 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 19:49:31.614 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 19:49:31.614 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:49:31.701 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 19:49:31.701 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 19:49:31.725 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****2cng"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Qu4Q"
    }
  ],
  "ActivityId": "0HLI29E998RBT:00000001",
  "TimeStamp": "2018-11-04T11:49:31Z",
  "ProcessId": 16988,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 19:49:31.727 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "4f3249864e974304922a4332283b4cc9",
  "Scope": "openid profile api1"
}
2018-11-04 19:49:31.973 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:49:31.973 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:49:31.973 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:49:31.973 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:49:31.974 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:49:31.974 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:49:31.974 +08:00 [DBG] Start discovery request
2018-11-04 19:49:32.074 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 19:49:32.074 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:49:32.074 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:49:32.074 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 19:49:32.075 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 19:49:32.075 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 19:49:32.077 +08:00 [DBG] Start key discovery request
2018-11-04 19:49:32.125 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 19:49:32.125 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:49:32.125 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:49:32.137 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 19:49:32.137 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:49:32.137 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:49:32.137 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 19:49:32.140 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 19:49:32.140 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 19:49:32.148 +08:00 [DBG] Start userinfo request
2018-11-04 19:49:32.151 +08:00 [DBG] Bearer token found in header
2018-11-04 19:49:32.201 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:49:32.204 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:49:32.209 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 19:49:32.212 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541332171,
    "exp": 1541335771,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541330033,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 19:49:32.218 +08:00 [DBG] Creating userinfo response
2018-11-04 19:49:32.221 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:49:32.224 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:49:32.228 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 19:49:32.228 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 19:49:32.231 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 19:49:32.232 +08:00 [DBG] End userinfo request
2018-11-04 19:49:32.249 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:49:32.250 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:49:32.250 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:49:32.251 +08:00 [DBG] Rendering check session result
2018-11-04 19:49:32.526 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 19:49:32.526 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 19:49:32.526 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 19:49:32.526 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 19:49:32.526 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 19:49:32.526 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 19:49:32.526 +08:00 [DBG] Start discovery request
2018-11-04 19:49:32.806 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 19:49:32.806 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 19:49:32.806 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 19:49:32.806 +08:00 [DBG] Rendering check session result
2018-11-04 19:49:37.437 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 19:49:37.437 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 19:49:37.438 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 19:49:37.444 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 19:49:37.451 +08:00 [DBG] Start end session request validation
2018-11-04 19:49:37.458 +08:00 [DBG] Start identity token validation
2018-11-04 19:49:37.459 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 19:49:37.459 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 19:49:37.465 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 19:49:37.466 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541332171,
    "exp": 1541332471,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "aeb3565af6814fbaa4234410782bb60d",
    "iat": 1541332171,
    "at_hash": "shk1H5dJNEjMom3fPsjH_w",
    "sid": "1834bc0af4e0f4837fe7e5a7ead2b174",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541330033,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 19:49:37.469 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzIxNzEsImV4cCI6MTU0MTMzMjQ3MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6ImFlYjM1NjVhZjY4MTRmYmFhNDIzNDQxMDc4MmJiNjBkIiwiaWF0IjoxNTQxMzMyMTcxLCJhdF9oYXNoIjoic2hrMUg1ZEpORWpNb20zZlBzakhfdyIsInNpZCI6IjE4MzRiYzBhZjRlMGY0ODM3ZmU3ZTVhN2VhZDJiMTc0Iiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzMwMDMzLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.GtaKeLPurhbNWXcma8qLjUZaUbU3OzeZPJTrkY56ZezmVO85ECA5IyuyIl4RQmakFSm7Xi4tdjiIF4sQrtFDM2hHBxxDy2rro7ixT1YWMTZMSX5XIJXNzCqGin6fnKDDKYX7BiDGgjUqz5hiOK50ytVsyb_EAGIwFXL3goEKnIsOAweBJNqWFAl93g1iXz9ROu95lbGA-ynDQvvv7jvt8W0ZrAaAk2Fx4WWoiFfDe-FUsjz7V9yk7qy7blqbLimISC-Z7PRWrd6J6xAn6hvT60pUjQfs6k8OimThGgOZYoJt2rsqXJn0cei_kdc2sfwSYt1sw36WNn_YBnDQkJ2cng",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 19:49:37.470 +08:00 [DBG] Success validating end session request from js
2018-11-04 20:16:31.922 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-04 20:16:31.977 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-04 20:16:31.980 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-04 20:16:31.980 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-04 20:16:31.980 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-04 20:16:31.980 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-04 20:31:17.938 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-04 20:31:17.988 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-04 20:31:17.990 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-04 20:31:17.991 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-04 20:31:17.991 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-04 20:31:17.991 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-04 20:31:30.101 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:31:30.106 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:31:30.106 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:31:30.130 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:31:30.301 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:31:30.301 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:31:30.304 +08:00 [DBG] Start discovery request
2018-11-04 20:31:30.381 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 20:31:30.388 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 20:31:30.388 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 20:31:30.392 +08:00 [DBG] Start authorize request
2018-11-04 20:31:30.404 +08:00 [DBG] No user present in authorize request
2018-11-04 20:31:30.410 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 20:31:30.421 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:31:30.452 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 20:31:30.460 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "89ed45c11fad449db08d3bd523a75a29",
  "Nonce": "192ca3ec564e43c38343457497941a38",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "89ed45c11fad449db08d3bd523a75a29",
    "nonce": "192ca3ec564e43c38343457497941a38"
  }
}
2018-11-04 20:31:30.466 +08:00 [INF] Showing login: User is not authenticated
2018-11-04 20:31:30.736 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 20:31:33.955 +08:00 [DBG] Augmenting SignInContext
2018-11-04 20:31:33.957 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 20:31:33.957 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 20:31:33.957 +08:00 [DBG] Adding auth_time claim with value: 1541334693
2018-11-04 20:31:33.962 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 20:31:33.962 +08:00 [INF] User logged in.
2018-11-04 20:31:33.968 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-11-04 20:31:33.969 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-11-04 20:31:33.969 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-11-04 20:31:33.973 +08:00 [DBG] Start authorize callback request
2018-11-04 20:31:33.976 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:31:33.976 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 20:31:33.976 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:31:33.976 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 20:31:33.976 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "89ed45c11fad449db08d3bd523a75a29",
  "Nonce": "192ca3ec564e43c38343457497941a38",
  "SessionId": "b8848c313f476f63d9ecc4240f4c27ba",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "89ed45c11fad449db08d3bd523a75a29",
    "nonce": "192ca3ec564e43c38343457497941a38"
  }
}
2018-11-04 20:31:34.015 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 20:31:34.020 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 20:31:34.028 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 20:31:34.028 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:31:34.103 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 20:31:34.103 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 20:31:34.124 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****RHrA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****KAcg"
    }
  ],
  "ActivityId": "0HLI2A5NIBO01:00000005",
  "TimeStamp": "2018-11-04T12:31:34Z",
  "ProcessId": 10700,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 20:31:34.127 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "89ed45c11fad449db08d3bd523a75a29",
  "Scope": "openid profile api1"
}
2018-11-04 20:31:34.140 +08:00 [DBG] Augmenting SignInContext
2018-11-04 20:31:34.140 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 20:31:34.215 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:31:34.216 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:31:34.216 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:31:34.216 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:31:34.216 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:31:34.216 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:31:34.216 +08:00 [DBG] Start discovery request
2018-11-04 20:31:34.229 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 20:31:34.229 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:31:34.229 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:31:34.230 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 20:31:34.230 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 20:31:34.230 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 20:31:34.233 +08:00 [DBG] Start key discovery request
2018-11-04 20:31:34.264 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:31:34.264 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:31:34.264 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:31:34.266 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:31:34.266 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:31:34.266 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:31:34.266 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 20:31:34.268 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 20:31:34.268 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 20:31:34.272 +08:00 [DBG] Start userinfo request
2018-11-04 20:31:34.276 +08:00 [DBG] Bearer token found in header
2018-11-04 20:31:34.320 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:31:34.322 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:31:34.324 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:31:34.326 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541334694,
    "exp": 1541338294,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541334693,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 20:31:34.331 +08:00 [DBG] Creating userinfo response
2018-11-04 20:31:34.334 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:31:34.335 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:31:34.337 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 20:31:34.337 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:31:34.340 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 20:31:34.340 +08:00 [DBG] End userinfo request
2018-11-04 20:31:34.347 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:31:34.347 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:31:34.347 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:31:34.348 +08:00 [DBG] Rendering check session result
2018-11-04 20:31:34.477 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:31:34.477 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:31:34.477 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:31:34.479 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:31:34.479 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:31:34.479 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:31:34.479 +08:00 [DBG] Start discovery request
2018-11-04 20:31:34.705 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:31:34.706 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:31:34.706 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:31:34.706 +08:00 [DBG] Rendering check session result
2018-11-04 20:31:34.969 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:31:34.969 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:31:34.969 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:31:34.969 +08:00 [DBG] Start discovery request
2018-11-04 20:31:35.033 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 20:31:35.033 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 20:31:35.033 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 20:31:35.033 +08:00 [DBG] Start key discovery request
2018-11-04 20:31:38.524 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 20:31:38.525 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 20:31:38.525 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 20:31:38.529 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:31:38.536 +08:00 [DBG] Start end session request validation
2018-11-04 20:31:38.544 +08:00 [DBG] Start identity token validation
2018-11-04 20:31:38.545 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:31:38.545 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 20:31:38.550 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:31:38.551 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541334694,
    "exp": 1541334994,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "192ca3ec564e43c38343457497941a38",
    "iat": 1541334694,
    "at_hash": "Pr3OD_mvHigyfBvH2aIdrw",
    "sid": "b8848c313f476f63d9ecc4240f4c27ba",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541334693,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 20:31:38.557 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzQ2OTQsImV4cCI6MTU0MTMzNDk5NCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjE5MmNhM2VjNTY0ZTQzYzM4MzQzNDU3NDk3OTQxYTM4IiwiaWF0IjoxNTQxMzM0Njk0LCJhdF9oYXNoIjoiUHIzT0RfbXZIaWd5ZkJ2SDJhSWRydyIsInNpZCI6ImI4ODQ4YzMxM2Y0NzZmNjNkOWVjYzQyNDBmNGMyN2JhIiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzM0NjkzLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.KL7X28-8iu8WTytHbPr8VJYMbVSAFADGO5DjHRBR0tEDN-L2dniecVJnBzEuqjoy0HGCJ6wtan-fMph64xIkQaIha_DfyqMgJ9rl5JWDl00CWtoIcWdnbgnFxDDPVDFaM-EuZA_8KfI-qt3PaGYa80RrsdzSLKCdy6Xhq4sMIAthBUTybxyGkc5F2U_b1-ihAEgSLPhWltwk_J_eN87V04QIWqdZXuXdDV1BFR2YzvMFSzLSt7nr2yPsKjEk3o7UEa6Hel-vdm3L1ty-LJ_lQVtIlHDyRefR83GTATSyx4sz-uJnspAEkrEXrgJoMpAq0kz6qH0P_KWRoGaEtoRHrA",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 20:31:38.557 +08:00 [DBG] Success validating end session request from js
2018-11-04 20:32:15.000 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:32:15.000 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:32:15.000 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:32:15.001 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:32:15.001 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:32:15.001 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:32:15.001 +08:00 [DBG] Start discovery request
2018-11-04 20:32:15.010 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 20:32:15.010 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 20:32:15.010 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 20:32:15.010 +08:00 [DBG] Start authorize request
2018-11-04 20:32:15.010 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:32:15.011 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 20:32:15.011 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:32:15.011 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 20:32:15.011 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "052968a7c3c6400180a06c0f454741ef",
  "Nonce": "4fd3375e758f44c5a5ddf489a78e47d4",
  "SessionId": "b8848c313f476f63d9ecc4240f4c27ba",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "052968a7c3c6400180a06c0f454741ef",
    "nonce": "4fd3375e758f44c5a5ddf489a78e47d4"
  }
}
2018-11-04 20:32:15.014 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 20:32:15.014 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 20:32:15.014 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 20:32:15.014 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:32:15.023 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 20:32:15.023 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 20:32:15.027 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****nLOQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****mn6g"
    }
  ],
  "ActivityId": "0HLI2A5NIBO01:0000000A",
  "TimeStamp": "2018-11-04T12:32:15Z",
  "ProcessId": 10700,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 20:32:15.027 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "052968a7c3c6400180a06c0f454741ef",
  "Scope": "openid profile api1"
}
2018-11-04 20:32:15.174 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:32:15.174 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:32:15.174 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:32:15.174 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:32:15.175 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:32:15.175 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:32:15.175 +08:00 [DBG] Start discovery request
2018-11-04 20:32:15.230 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 20:32:15.230 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:32:15.230 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:32:15.230 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 20:32:15.230 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 20:32:15.230 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 20:32:15.230 +08:00 [DBG] Start key discovery request
2018-11-04 20:32:15.281 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:32:15.281 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:32:15.281 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:32:15.286 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:32:15.286 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:32:15.286 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:32:15.286 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 20:32:15.287 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 20:32:15.287 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 20:32:15.287 +08:00 [DBG] Start userinfo request
2018-11-04 20:32:15.287 +08:00 [DBG] Bearer token found in header
2018-11-04 20:32:15.289 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:32:15.289 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:32:15.291 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:32:15.292 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541334735,
    "exp": 1541338335,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541334693,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 20:32:15.292 +08:00 [DBG] Creating userinfo response
2018-11-04 20:32:15.292 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:32:15.292 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:32:15.292 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 20:32:15.292 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:32:15.294 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 20:32:15.294 +08:00 [DBG] End userinfo request
2018-11-04 20:32:15.313 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:32:15.313 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:32:15.313 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:32:15.313 +08:00 [DBG] Rendering check session result
2018-11-04 20:32:15.561 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:32:15.561 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:32:15.561 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:32:15.561 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:32:15.561 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:32:15.561 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:32:15.561 +08:00 [DBG] Start discovery request
2018-11-04 20:32:15.820 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:32:15.820 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:32:15.820 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:32:15.820 +08:00 [DBG] Rendering check session result
2018-11-04 20:32:22.314 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 20:32:22.315 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 20:32:22.315 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 20:32:22.315 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:32:22.315 +08:00 [DBG] Start end session request validation
2018-11-04 20:32:22.315 +08:00 [DBG] Start identity token validation
2018-11-04 20:32:22.315 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:32:22.315 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 20:32:22.320 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:32:22.320 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541334735,
    "exp": 1541335035,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "4fd3375e758f44c5a5ddf489a78e47d4",
    "iat": 1541334735,
    "at_hash": "tbr39WnlJXdAubnwwHpNbw",
    "sid": "b8848c313f476f63d9ecc4240f4c27ba",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541334693,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 20:32:22.320 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzQ3MzUsImV4cCI6MTU0MTMzNTAzNSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjRmZDMzNzVlNzU4ZjQ0YzVhNWRkZjQ4OWE3OGU0N2Q0IiwiaWF0IjoxNTQxMzM0NzM1LCJhdF9oYXNoIjoidGJyMzlXbmxKWGRBdWJud3dIcE5idyIsInNpZCI6ImI4ODQ4YzMxM2Y0NzZmNjNkOWVjYzQyNDBmNGMyN2JhIiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzM0NjkzLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.hnl0Z2wv6uDqU4HXC-UozQZbybgfzfYwzYVf3pgTx_vEZyntz1Ozgu7P9mayIPeKLffdCL8pJDHPt-a39dUEcw0xLRh8s5yrFLqSXXh-slIRJIrGBgF1EP7pf8fNs65iIwtJ8x1yFfEocTLV6IyBkJVNdtAxfRo66jJn-sUNMrBvlqIWLA_zwZNdKHWIqJUCJEE3pqbC5B8WXjQ78gC-SCsjQ-z04d_PmydR8knMBfgzmI9eiSmttolMeoAsH2ZzLOZqu0xOXWxJ9P0Ls-Dj455I-T_x70JMfrl2sh7LvhyR2vGtsPfm_rSyHK7ksHyAVwtcCjhor0PQvBfmBrnLOQ",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 20:32:22.320 +08:00 [DBG] Success validating end session request from js
2018-11-04 20:36:01.202 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-04 20:36:01.254 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-04 20:36:01.257 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-04 20:36:01.257 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-04 20:36:01.258 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-04 20:36:01.258 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-04 20:36:09.576 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:36:09.581 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:36:09.582 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:36:09.586 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:36:09.591 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:36:09.591 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:36:09.595 +08:00 [DBG] Start discovery request
2018-11-04 20:36:09.635 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 20:36:09.639 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 20:36:09.640 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 20:36:09.644 +08:00 [DBG] Start authorize request
2018-11-04 20:36:09.660 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:36:09.666 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 20:36:09.678 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:36:09.715 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 20:36:09.725 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "71bd90228bd7449fb3f1ea95b75753f9",
  "Nonce": "55cdf4153db348028b85a83232085d89",
  "SessionId": "b8848c313f476f63d9ecc4240f4c27ba",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "71bd90228bd7449fb3f1ea95b75753f9",
    "nonce": "55cdf4153db348028b85a83232085d89"
  }
}
2018-11-04 20:36:11.073 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 20:36:11.078 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 20:36:11.087 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 20:36:11.087 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:36:11.277 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 20:36:11.278 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 20:36:11.302 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****-3Hw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****fgoA"
    }
  ],
  "ActivityId": "0HLI2A8A6OUER:00000002",
  "TimeStamp": "2018-11-04T12:36:11Z",
  "ProcessId": 8568,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 20:36:11.307 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "71bd90228bd7449fb3f1ea95b75753f9",
  "Scope": "openid profile api1"
}
2018-11-04 20:36:11.376 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:36:11.377 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:36:11.378 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:36:11.388 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:36:11.390 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:36:11.392 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:36:11.425 +08:00 [DBG] Start discovery request
2018-11-04 20:36:11.434 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 20:36:11.435 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:36:11.436 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:36:11.438 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 20:36:11.442 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 20:36:11.443 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 20:36:11.450 +08:00 [DBG] Start key discovery request
2018-11-04 20:36:11.476 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:36:11.477 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:36:11.477 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:36:11.480 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:36:11.481 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:36:11.481 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:36:11.481 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 20:36:11.483 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 20:36:11.484 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 20:36:11.489 +08:00 [DBG] Start userinfo request
2018-11-04 20:36:11.492 +08:00 [DBG] Bearer token found in header
2018-11-04 20:36:11.537 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:36:11.539 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:36:11.547 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:36:11.551 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541334971,
    "exp": 1541338571,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541334693,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 20:36:11.557 +08:00 [DBG] Creating userinfo response
2018-11-04 20:36:11.561 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:36:11.564 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:36:11.567 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 20:36:11.567 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:36:11.571 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 20:36:11.572 +08:00 [DBG] End userinfo request
2018-11-04 20:36:11.579 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:36:11.580 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:36:11.580 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:36:11.582 +08:00 [DBG] Rendering check session result
2018-11-04 20:36:11.663 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:36:11.664 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:36:11.664 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:36:11.665 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:36:11.665 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:36:11.666 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:36:11.666 +08:00 [DBG] Start discovery request
2018-11-04 20:36:11.673 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:36:11.674 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:36:11.674 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:36:11.675 +08:00 [DBG] Rendering check session result
2018-11-04 20:36:24.187 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 20:36:24.189 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 20:36:24.189 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 20:36:24.197 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:36:24.202 +08:00 [DBG] Start end session request validation
2018-11-04 20:36:24.210 +08:00 [DBG] Start identity token validation
2018-11-04 20:36:24.212 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:36:24.213 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 20:36:24.217 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:36:24.218 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541334971,
    "exp": 1541335271,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "55cdf4153db348028b85a83232085d89",
    "iat": 1541334971,
    "at_hash": "TdMMnYN1kNjXwni8bPwviA",
    "sid": "b8848c313f476f63d9ecc4240f4c27ba",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541334693,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 20:36:24.223 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzQ5NzEsImV4cCI6MTU0MTMzNTI3MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjU1Y2RmNDE1M2RiMzQ4MDI4Yjg1YTgzMjMyMDg1ZDg5IiwiaWF0IjoxNTQxMzM0OTcxLCJhdF9oYXNoIjoiVGRNTW5ZTjFrTmpYd25pOGJQd3ZpQSIsInNpZCI6ImI4ODQ4YzMxM2Y0NzZmNjNkOWVjYzQyNDBmNGMyN2JhIiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzM0NjkzLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.Cp5RVMCxEDZKQSIxq3pMcCjQrFoWnmwCjUh_X4ilEYTlQUoTUGqq4_j6vVTlZIZ9kM-xFeYfVnf60kK844lF-616e9Nwo4_JZbOU82zw4jNiy42c3IXKYzt0YpMlJrGdVo5Kk4eKYe6s4n0pmQMcRptFfR_wT2JwPgOOwmaPwVnCWGv0im3blr4FTLSd5a4shTmrWENevZ_hVTlrKkW3afY_BkgapqVlxhVlJ7tbCSHIesl78mEkXjgaOz5tx24NlPDcH7ODaBsTl2Mr0yyIv0PasKenuc1iMbJSWopMS56n4YUMguYvACSuKv2eveTMUwazqcn6jTCtMQ3EGO-3Hw",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 20:36:24.224 +08:00 [DBG] Success validating end session request from js
2018-11-04 20:36:27.813 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 20:36:27.815 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 20:36:27.815 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 20:36:28.565 +08:00 [INF] User logged out.
2018-11-04 20:36:40.357 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The supplied URL is not local. A URL with an absolute path is considered local if it does not have a host/authority part. URLs using virtual paths ('~/') are also local.
   at Microsoft.AspNetCore.Mvc.Infrastructure.LocalRedirectResultExecutor.ExecuteAsync(ActionContext context, LocalRedirectResult result)
   at Microsoft.AspNetCore.Mvc.LocalRedirectResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-11-04 20:38:14.894 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-04 20:38:14.941 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-04 20:38:14.943 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-04 20:38:14.943 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-04 20:38:14.943 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-04 20:38:14.943 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-04 20:38:23.421 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:38:23.428 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:23.428 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:23.457 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:38:23.574 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:38:23.574 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:38:23.576 +08:00 [DBG] Start discovery request
2018-11-04 20:38:23.663 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 20:38:23.668 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 20:38:23.668 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 20:38:23.673 +08:00 [DBG] Start authorize request
2018-11-04 20:38:23.691 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:38:23.699 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 20:38:23.707 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:38:23.736 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 20:38:23.745 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "237f013bdf1c42f28868bb29c12b9561",
  "Nonce": "fe244a24b2fc4947b95e0bb77e2e138a",
  "SessionId": "b8848c313f476f63d9ecc4240f4c27ba",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "237f013bdf1c42f28868bb29c12b9561",
    "nonce": "fe244a24b2fc4947b95e0bb77e2e138a"
  }
}
2018-11-04 20:38:24.873 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 20:38:24.878 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 20:38:24.886 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 20:38:24.886 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:38:25.048 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 20:38:25.048 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 20:38:25.068 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****aDLg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****GwCA"
    }
  ],
  "ActivityId": "0HLI2A9JKP9RI:00000001",
  "TimeStamp": "2018-11-04T12:38:25Z",
  "ProcessId": 15092,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 20:38:25.071 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "237f013bdf1c42f28868bb29c12b9561",
  "Scope": "openid profile api1"
}
2018-11-04 20:38:25.232 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:38:25.232 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:25.232 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:25.232 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:38:25.233 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:38:25.233 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:38:25.233 +08:00 [DBG] Start discovery request
2018-11-04 20:38:25.286 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 20:38:25.287 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:25.287 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:25.287 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 20:38:25.288 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 20:38:25.288 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 20:38:25.290 +08:00 [DBG] Start key discovery request
2018-11-04 20:38:25.345 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:38:25.346 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:25.346 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:25.350 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:38:25.350 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:25.350 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:25.351 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 20:38:25.352 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 20:38:25.352 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 20:38:25.357 +08:00 [DBG] Start userinfo request
2018-11-04 20:38:25.360 +08:00 [DBG] Bearer token found in header
2018-11-04 20:38:25.414 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:38:25.416 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:38:25.424 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:38:25.428 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541335105,
    "exp": 1541338705,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541334693,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 20:38:25.433 +08:00 [DBG] Creating userinfo response
2018-11-04 20:38:25.436 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:38:25.438 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:38:25.440 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 20:38:25.440 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:38:25.445 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 20:38:25.445 +08:00 [DBG] End userinfo request
2018-11-04 20:38:25.453 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:38:25.454 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:38:25.454 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:38:25.454 +08:00 [DBG] Rendering check session result
2018-11-04 20:38:25.688 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:38:25.688 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:25.688 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:25.688 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:38:25.688 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:38:25.688 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:38:25.689 +08:00 [DBG] Start discovery request
2018-11-04 20:38:25.717 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:38:25.718 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:38:25.718 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:38:25.718 +08:00 [DBG] Rendering check session result
2018-11-04 20:38:30.688 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 20:38:30.689 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 20:38:30.689 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 20:38:30.695 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:38:30.701 +08:00 [DBG] Start end session request validation
2018-11-04 20:38:30.712 +08:00 [DBG] Start identity token validation
2018-11-04 20:38:30.713 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:38:30.713 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 20:38:30.717 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:38:30.718 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541335105,
    "exp": 1541335405,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "fe244a24b2fc4947b95e0bb77e2e138a",
    "iat": 1541335105,
    "at_hash": "nUwAdIAaCp-Fu8MTFCR8Ew",
    "sid": "b8848c313f476f63d9ecc4240f4c27ba",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541334693,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 20:38:30.721 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzUxMDUsImV4cCI6MTU0MTMzNTQwNSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6ImZlMjQ0YTI0YjJmYzQ5NDdiOTVlMGJiNzdlMmUxMzhhIiwiaWF0IjoxNTQxMzM1MTA1LCJhdF9oYXNoIjoiblV3QWRJQWFDcC1GdThNVEZDUjhFdyIsInNpZCI6ImI4ODQ4YzMxM2Y0NzZmNjNkOWVjYzQyNDBmNGMyN2JhIiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzM0NjkzLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.nqsMpZ_UJjuyD2xZhIl0A47tpdSZcETDiOFq6L1sRwn7nE6Au4AYQeh4XbTEgAURwPH058uSnyLLjT0K3mrTkrCB-ihl-F098YFxMyf8pVQb0n3c83BS_RoGpuS7vV44SGH8evPG2aun01u38bNPtRzOupn_vaoUfDgFxTCVTqlbH6U1FGAOT7uNPKvulj2PeLIqBAnG2YnlKaaBoHcLyyINYVPvb8SMnU-RdPQfbA_hwcmDK3hkVsCgGLYBNuMx-iwOsdz7ThbZJBoOSjywcacTiN7BkF8u954_IhaxMuP1rCcvv5zWksIkWzfeRF4aDVeC6qkmLkM64nmVPaaDLg",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 20:38:30.721 +08:00 [DBG] Success validating end session request from js
2018-11-04 20:38:30.899 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 20:38:30.900 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 20:38:30.900 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 20:38:30.900 +08:00 [INF] User logged out.
2018-11-04 20:38:38.772 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:38:38.772 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:38.772 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:38.772 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:38:38.772 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:38:38.772 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:38:38.772 +08:00 [DBG] Start discovery request
2018-11-04 20:38:38.780 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 20:38:38.780 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 20:38:38.780 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 20:38:38.780 +08:00 [DBG] Start authorize request
2018-11-04 20:38:38.781 +08:00 [DBG] No user present in authorize request
2018-11-04 20:38:38.781 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 20:38:38.781 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:38:38.781 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 20:38:38.782 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "6306212fb1ab479bbb0a2ee8dbf53ffa",
  "Nonce": "9d88c54ce66541c28e879e4545d5d141",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "6306212fb1ab479bbb0a2ee8dbf53ffa",
    "nonce": "9d88c54ce66541c28e879e4545d5d141"
  }
}
2018-11-04 20:38:38.782 +08:00 [INF] Showing login: User is not authenticated
2018-11-04 20:38:38.821 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 20:38:44.217 +08:00 [DBG] Augmenting SignInContext
2018-11-04 20:38:44.219 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 20:38:44.219 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 20:38:44.219 +08:00 [DBG] Adding auth_time claim with value: 1541335124
2018-11-04 20:38:44.223 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 20:38:44.223 +08:00 [INF] User logged in.
2018-11-04 20:38:44.226 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-11-04 20:38:44.226 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-11-04 20:38:44.226 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-11-04 20:38:44.230 +08:00 [DBG] Start authorize callback request
2018-11-04 20:38:44.233 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:38:44.233 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 20:38:44.233 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:38:44.233 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 20:38:44.234 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "6306212fb1ab479bbb0a2ee8dbf53ffa",
  "Nonce": "9d88c54ce66541c28e879e4545d5d141",
  "SessionId": "901e04defbb4f5b86800b2f222379d1e",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "6306212fb1ab479bbb0a2ee8dbf53ffa",
    "nonce": "9d88c54ce66541c28e879e4545d5d141"
  }
}
2018-11-04 20:38:44.235 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 20:38:44.235 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 20:38:44.235 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 20:38:44.235 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:38:44.241 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 20:38:44.241 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 20:38:44.245 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Prvg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****HClQ"
    }
  ],
  "ActivityId": "0HLI2A9JKP9RL:00000005",
  "TimeStamp": "2018-11-04T12:38:44Z",
  "ProcessId": 15092,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 20:38:44.245 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "6306212fb1ab479bbb0a2ee8dbf53ffa",
  "Scope": "openid profile api1"
}
2018-11-04 20:38:44.249 +08:00 [DBG] Augmenting SignInContext
2018-11-04 20:38:44.250 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 20:38:44.389 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:38:44.389 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:44.389 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:44.389 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:38:44.389 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:38:44.389 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:38:44.389 +08:00 [DBG] Start discovery request
2018-11-04 20:38:44.438 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 20:38:44.438 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:44.438 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:44.438 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 20:38:44.438 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 20:38:44.439 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 20:38:44.439 +08:00 [DBG] Start key discovery request
2018-11-04 20:38:44.493 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:38:44.494 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:44.494 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:44.499 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:38:44.499 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:44.499 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:44.499 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 20:38:44.499 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 20:38:44.499 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 20:38:44.499 +08:00 [DBG] Start userinfo request
2018-11-04 20:38:44.499 +08:00 [DBG] Bearer token found in header
2018-11-04 20:38:44.502 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:38:44.502 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:38:44.504 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:38:44.505 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541335124,
    "exp": 1541338724,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541335124,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 20:38:44.505 +08:00 [DBG] Creating userinfo response
2018-11-04 20:38:44.505 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:38:44.505 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:38:44.505 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 20:38:44.505 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:38:44.507 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 20:38:44.507 +08:00 [DBG] End userinfo request
2018-11-04 20:38:44.530 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:38:44.530 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:38:44.530 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:38:44.530 +08:00 [DBG] Rendering check session result
2018-11-04 20:38:44.759 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:38:44.759 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:38:44.759 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:38:44.759 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:38:44.759 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:38:44.759 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:38:44.759 +08:00 [DBG] Start discovery request
2018-11-04 20:38:44.786 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:38:44.786 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:38:44.786 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:38:44.786 +08:00 [DBG] Rendering check session result
2018-11-04 20:38:48.416 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 20:38:48.417 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 20:38:48.417 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 20:38:48.417 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:38:48.417 +08:00 [DBG] Start end session request validation
2018-11-04 20:38:48.417 +08:00 [DBG] Start identity token validation
2018-11-04 20:38:48.417 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:38:48.417 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 20:38:48.423 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:38:48.423 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541335124,
    "exp": 1541335424,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "9d88c54ce66541c28e879e4545d5d141",
    "iat": 1541335124,
    "at_hash": "KLSRZyZmfGVAjsxfmK9GmQ",
    "sid": "901e04defbb4f5b86800b2f222379d1e",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541335124,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 20:38:48.424 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzUxMjQsImV4cCI6MTU0MTMzNTQyNCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjlkODhjNTRjZTY2NTQxYzI4ZTg3OWU0NTQ1ZDVkMTQxIiwiaWF0IjoxNTQxMzM1MTI0LCJhdF9oYXNoIjoiS0xTUlp5Wm1mR1ZBanN4Zm1LOUdtUSIsInNpZCI6IjkwMWUwNGRlZmJiNGY1Yjg2ODAwYjJmMjIyMzc5ZDFlIiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzM1MTI0LCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.c9N5YJfufOjtI96Hm_9C__X7HMS3XJ0TjcdoYHSr8wi5xtOv4NrJiA6FJ7yS2eC9bC-8AkZPpOcqwEfoZL5vhGnCrBbQrdPxX2KZhODohP-YbjcZjME58qp-QNdmzGyYv1CXxvcO_Grcy1_OhMDSUBgVymgzCjm89yc5mARdQRN4WCO6t5ZWZVqTgSf8-YA0HS8PnP4jw-d1pBtB5cGUZPpeJp5mPMqWyyuYgUah3VUoZQ5CupmoJ4KfaEToRIpQsiJoX_L_co_hSdU1Rx1sekGjSAdJhilR4DgRKBUwwERzCYJq-X_qLbf196FVB_n0Se5MFYn2hZz1tZD5XQPrvg",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 20:38:48.424 +08:00 [DBG] Success validating end session request from js
2018-11-04 20:38:48.442 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 20:38:48.442 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 20:38:48.443 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 20:38:48.443 +08:00 [INF] User logged out.
2018-11-04 20:39:04.509 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:39:04.509 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:39:04.510 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:39:04.510 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:39:04.510 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:39:04.510 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:39:04.510 +08:00 [DBG] Start discovery request
2018-11-04 20:39:04.518 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 20:39:04.518 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 20:39:04.518 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 20:39:04.518 +08:00 [DBG] Start authorize request
2018-11-04 20:39:04.518 +08:00 [DBG] No user present in authorize request
2018-11-04 20:39:04.518 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 20:39:04.518 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:39:04.518 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 20:39:04.518 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "e55b8c2ffff240b7a43035e0fb202fc2",
  "Nonce": "ae92280905844b22a58cf21e36d3aa22",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "e55b8c2ffff240b7a43035e0fb202fc2",
    "nonce": "ae92280905844b22a58cf21e36d3aa22"
  }
}
2018-11-04 20:39:04.518 +08:00 [INF] Showing login: User is not authenticated
2018-11-04 20:39:04.524 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 20:39:07.873 +08:00 [DBG] Augmenting SignInContext
2018-11-04 20:39:07.873 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 20:39:07.873 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 20:39:07.873 +08:00 [DBG] Adding auth_time claim with value: 1541335147
2018-11-04 20:39:07.873 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 20:39:07.873 +08:00 [INF] User logged in.
2018-11-04 20:39:07.876 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-11-04 20:39:07.877 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-11-04 20:39:07.877 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-11-04 20:39:07.877 +08:00 [DBG] Start authorize callback request
2018-11-04 20:39:07.877 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:39:07.877 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 20:39:07.877 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:39:07.877 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 20:39:07.877 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "e55b8c2ffff240b7a43035e0fb202fc2",
  "Nonce": "ae92280905844b22a58cf21e36d3aa22",
  "SessionId": "ff40eef2995beb931f6a3aeab4934408",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "e55b8c2ffff240b7a43035e0fb202fc2",
    "nonce": "ae92280905844b22a58cf21e36d3aa22"
  }
}
2018-11-04 20:39:07.881 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 20:39:07.881 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 20:39:07.881 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 20:39:07.881 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:39:07.887 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 20:39:07.887 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 20:39:07.891 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Tskg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****j-IA"
    }
  ],
  "ActivityId": "0HLI2A9JKP9RL:00000011",
  "TimeStamp": "2018-11-04T12:39:07Z",
  "ProcessId": 15092,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 20:39:07.892 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "e55b8c2ffff240b7a43035e0fb202fc2",
  "Scope": "openid profile api1"
}
2018-11-04 20:39:07.892 +08:00 [DBG] Augmenting SignInContext
2018-11-04 20:39:07.892 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 20:39:08.073 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:39:08.073 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:39:08.073 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:39:08.073 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:39:08.073 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:39:08.073 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:39:08.073 +08:00 [DBG] Start discovery request
2018-11-04 20:39:08.125 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 20:39:08.125 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:39:08.125 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:39:08.125 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 20:39:08.125 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 20:39:08.125 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 20:39:08.125 +08:00 [DBG] Start key discovery request
2018-11-04 20:39:08.188 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:39:08.189 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:39:08.189 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:39:08.193 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:39:08.193 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:39:08.193 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:39:08.193 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 20:39:08.193 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 20:39:08.193 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 20:39:08.193 +08:00 [DBG] Start userinfo request
2018-11-04 20:39:08.194 +08:00 [DBG] Bearer token found in header
2018-11-04 20:39:08.196 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:39:08.196 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:39:08.198 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:39:08.198 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541335147,
    "exp": 1541338747,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541335147,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 20:39:08.198 +08:00 [DBG] Creating userinfo response
2018-11-04 20:39:08.198 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:39:08.198 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:39:08.198 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 20:39:08.198 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:39:08.200 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 20:39:08.200 +08:00 [DBG] End userinfo request
2018-11-04 20:39:08.221 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:39:08.221 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:39:08.221 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:39:08.221 +08:00 [DBG] Rendering check session result
2018-11-04 20:39:08.521 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:39:08.521 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:39:08.521 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:39:08.521 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:39:08.521 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:39:08.521 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:39:08.521 +08:00 [DBG] Start discovery request
2018-11-04 20:39:08.548 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:39:08.548 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:39:08.548 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:39:08.549 +08:00 [DBG] Rendering check session result
2018-11-04 20:39:17.386 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 20:39:17.386 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 20:39:17.386 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 20:39:17.386 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:39:17.386 +08:00 [DBG] Start end session request validation
2018-11-04 20:39:17.386 +08:00 [DBG] Start identity token validation
2018-11-04 20:39:17.387 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:39:17.387 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 20:39:17.391 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:39:17.392 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541335147,
    "exp": 1541335447,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "ae92280905844b22a58cf21e36d3aa22",
    "iat": 1541335147,
    "at_hash": "ocxx-ug-b9tuJSxAzxbRvQ",
    "sid": "ff40eef2995beb931f6a3aeab4934408",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541335147,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 20:39:17.392 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzUxNDcsImV4cCI6MTU0MTMzNTQ0NywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6ImFlOTIyODA5MDU4NDRiMjJhNThjZjIxZTM2ZDNhYTIyIiwiaWF0IjoxNTQxMzM1MTQ3LCJhdF9oYXNoIjoib2N4eC11Zy1iOXR1SlN4QXp4YlJ2USIsInNpZCI6ImZmNDBlZWYyOTk1YmViOTMxZjZhM2FlYWI0OTM0NDA4Iiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzM1MTQ3LCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.q3Fw92PkLznRidqky5vViu0BHrC-cnpI4wI0aRuhL3y_BXlUWWSTjzAEEZT3hJxR8YIEtP_hhcqUzf8ypmsmyaK5nXDLEBTkrwregMK4vBm7tX1UKETWINSsKEd3ZYqPvCG8poRpy6Iilf37xYzPVXkGICSGaJqjXeBX9ZUNeBJuqM8ELVM-4g81K_vnkgohVCyxT32GE5hl4HmlePfm4Tey8WB9GftBJtXljjU7CUu-bZWTSSyC3fw_s21PA2KU2A-fvMg8KedYMUXOqNImslvywPd4t7PRQT7uHC6ipc1tRdp16MWWjxU-dOF5EBvA_zxHlOSDjp6T8I2TTgTskg",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 20:39:17.392 +08:00 [DBG] Success validating end session request from js
2018-11-04 20:39:17.404 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 20:39:17.404 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 20:39:17.404 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 20:39:17.404 +08:00 [INF] User logged out.
2018-11-04 20:51:10.715 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:51:10.715 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:51:10.715 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:51:10.715 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:51:10.715 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:51:10.715 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:51:10.715 +08:00 [DBG] Start discovery request
2018-11-04 20:51:10.731 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 20:51:10.731 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 20:51:10.731 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 20:51:10.731 +08:00 [DBG] Start authorize request
2018-11-04 20:51:10.731 +08:00 [DBG] No user present in authorize request
2018-11-04 20:51:10.731 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 20:51:10.731 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:51:10.731 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 20:51:10.731 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "3c36c056f53945c7b9e46f9d081f7139",
  "Nonce": "324b988ef7294e71b397cf2d645df3ca",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "3c36c056f53945c7b9e46f9d081f7139",
    "nonce": "324b988ef7294e71b397cf2d645df3ca"
  }
}
2018-11-04 20:51:10.731 +08:00 [INF] Showing login: User is not authenticated
2018-11-04 20:51:10.742 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 20:51:13.077 +08:00 [DBG] Augmenting SignInContext
2018-11-04 20:51:13.078 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 20:51:13.078 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 20:51:13.078 +08:00 [DBG] Adding auth_time claim with value: 1541335873
2018-11-04 20:51:13.078 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 20:51:13.078 +08:00 [INF] User logged in.
2018-11-04 20:51:13.080 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-11-04 20:51:13.080 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-11-04 20:51:13.080 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-11-04 20:51:13.080 +08:00 [DBG] Start authorize callback request
2018-11-04 20:51:13.080 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:51:13.080 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 20:51:13.080 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:51:13.081 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 20:51:13.081 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "3c36c056f53945c7b9e46f9d081f7139",
  "Nonce": "324b988ef7294e71b397cf2d645df3ca",
  "SessionId": "745f523ebd24edd8206723909e4b4c2f",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "3c36c056f53945c7b9e46f9d081f7139",
    "nonce": "324b988ef7294e71b397cf2d645df3ca"
  }
}
2018-11-04 20:51:13.082 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 20:51:13.082 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 20:51:13.082 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 20:51:13.082 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 20:51:13.087 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 20:51:13.087 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 20:51:13.091 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****UWQw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****VaBg"
    }
  ],
  "ActivityId": "0HLI2A9JKP9RO:00000005",
  "TimeStamp": "2018-11-04T12:51:13Z",
  "ProcessId": 15092,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 20:51:13.091 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "3c36c056f53945c7b9e46f9d081f7139",
  "Scope": "openid profile api1"
}
2018-11-04 20:51:13.091 +08:00 [DBG] Augmenting SignInContext
2018-11-04 20:51:13.091 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 20:51:13.296 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:51:13.296 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:51:13.296 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:51:13.296 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:51:13.297 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:51:13.297 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:51:13.297 +08:00 [DBG] Start discovery request
2018-11-04 20:51:13.348 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 20:51:13.348 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:51:13.348 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:51:13.348 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 20:51:13.348 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 20:51:13.348 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 20:51:13.348 +08:00 [DBG] Start key discovery request
2018-11-04 20:51:13.406 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:51:13.406 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:51:13.406 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:51:13.412 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 20:51:13.412 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:51:13.412 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:51:13.412 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 20:51:13.412 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 20:51:13.412 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 20:51:13.412 +08:00 [DBG] Start userinfo request
2018-11-04 20:51:13.412 +08:00 [DBG] Bearer token found in header
2018-11-04 20:51:13.415 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:51:13.415 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 20:51:13.417 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 20:51:13.417 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541335873,
    "exp": 1541339473,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541335873,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 20:51:13.417 +08:00 [DBG] Creating userinfo response
2018-11-04 20:51:13.417 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:51:13.417 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:51:13.417 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 20:51:13.417 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 20:51:13.419 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 20:51:13.419 +08:00 [DBG] End userinfo request
2018-11-04 20:51:13.436 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:51:13.437 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:51:13.437 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:51:13.437 +08:00 [DBG] Rendering check session result
2018-11-04 20:51:13.709 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:51:13.710 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:51:13.710 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:51:13.710 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:51:13.710 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:51:13.710 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:51:13.710 +08:00 [DBG] Start discovery request
2018-11-04 20:51:13.736 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:51:13.736 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:51:13.736 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:51:13.736 +08:00 [DBG] Rendering check session result
2018-11-04 20:51:30.979 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:51:30.979 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:51:30.979 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:51:30.980 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:51:30.980 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:51:30.980 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:51:30.980 +08:00 [DBG] Start discovery request
2018-11-04 20:51:31.244 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:51:31.244 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:51:31.244 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:51:31.244 +08:00 [DBG] Rendering check session result
2018-11-04 20:52:33.360 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:52:33.360 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:52:33.360 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:52:33.360 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:52:33.360 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:52:33.360 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:52:33.360 +08:00 [DBG] Start discovery request
2018-11-04 20:52:33.790 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:52:33.790 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:52:33.790 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:52:33.790 +08:00 [DBG] Rendering check session result
2018-11-04 20:52:41.565 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 20:52:41.565 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 20:52:41.565 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 20:52:41.565 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 20:52:41.565 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 20:52:41.565 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 20:52:41.565 +08:00 [DBG] Start discovery request
2018-11-04 20:52:41.760 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 20:52:41.760 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 20:52:41.760 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 20:52:41.760 +08:00 [DBG] Rendering check session result
2018-11-04 21:01:47.911 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:01:47.911 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:01:47.911 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:01:47.911 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:01:47.912 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:01:47.912 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:01:47.912 +08:00 [DBG] Start discovery request
2018-11-04 21:01:47.951 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:01:47.952 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:01:47.952 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:01:47.952 +08:00 [DBG] Rendering check session result
2018-11-04 21:02:03.766 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:02:03.767 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:02:03.767 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:02:03.767 +08:00 [DBG] Rendering check session result
2018-11-04 21:03:43.145 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:03:43.145 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:03:43.145 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:03:43.145 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:03:43.145 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:03:43.145 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:03:43.145 +08:00 [DBG] Start discovery request
2018-11-04 21:03:43.182 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:03:43.182 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:03:43.182 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:03:43.183 +08:00 [DBG] Rendering check session result
2018-11-04 21:04:02.475 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:04:02.475 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:04:02.475 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:04:02.476 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:04:02.476 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:04:02.476 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:04:02.476 +08:00 [DBG] Start discovery request
2018-11-04 21:04:02.515 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:04:02.515 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:04:02.515 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:04:02.515 +08:00 [DBG] Rendering check session result
2018-11-04 21:04:02.769 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:04:02.769 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:04:02.769 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:04:02.769 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:04:02.770 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:04:02.770 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:04:02.770 +08:00 [DBG] Start discovery request
2018-11-04 21:04:03.122 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:04:03.122 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:04:03.122 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:04:03.122 +08:00 [DBG] Rendering check session result
2018-11-04 21:04:08.378 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:04:08.378 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:04:08.378 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:04:08.378 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:04:08.378 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:04:08.378 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:04:08.378 +08:00 [DBG] Start discovery request
2018-11-04 21:04:08.419 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:04:08.419 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:04:08.419 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:04:08.419 +08:00 [DBG] Rendering check session result
2018-11-04 21:04:08.675 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:04:08.675 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:04:08.675 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:04:08.676 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:04:08.676 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:04:08.676 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:04:08.676 +08:00 [DBG] Start discovery request
2018-11-04 21:04:09.086 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:04:09.086 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:04:09.086 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:04:09.086 +08:00 [DBG] Rendering check session result
2018-11-04 21:04:41.780 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 21:04:41.780 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 21:04:41.780 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 21:04:41.780 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 21:04:41.781 +08:00 [DBG] Start end session request validation
2018-11-04 21:04:41.781 +08:00 [DBG] Start identity token validation
2018-11-04 21:04:41.781 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:04:41.781 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 21:04:41.798 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 21:04:41.798 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541335873,
    "exp": 1541336173,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "324b988ef7294e71b397cf2d645df3ca",
    "iat": 1541335873,
    "at_hash": "zofRMyeN0Ogn5I5QsEAmnw",
    "sid": "745f523ebd24edd8206723909e4b4c2f",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541335873,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 21:04:41.798 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzU4NzMsImV4cCI6MTU0MTMzNjE3MywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjMyNGI5ODhlZjcyOTRlNzFiMzk3Y2YyZDY0NWRmM2NhIiwiaWF0IjoxNTQxMzM1ODczLCJhdF9oYXNoIjoiem9mUk15ZU4wT2duNUk1UXNFQW1udyIsInNpZCI6Ijc0NWY1MjNlYmQyNGVkZDgyMDY3MjM5MDllNGI0YzJmIiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzM1ODczLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.ARE2hZqkZr0CehdO8xwbMOr8qroO4AD4uDjEMvWZaOYe7LoyifLr8JgtmKXqSNUDvH2oXTS-51ZgqlV1pwVWEhwgyBOHvUqmvpR7V3IB8dhpywT_vn0ucSWzpy9Kh0zANXrCoKJwAB9qZ4D5_O-qCByRgeLfWVo-sHZWbb8dJQR6hy-TkPbSgz4duImOIIwWDhH12FZDob2XB2cGJBl1gvYgBw9kXvxV3m2EckI0p9j3YHVG5M3lDOx00mMy5-22YGDj0dqbhynoqBlukTS24xmpiKgG7ZCkDR1mlTmI_7-oWQw-6JOlx_xW94nQPa5YGGqUgHm0TJB2us3KbcUWQw",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 21:04:41.798 +08:00 [DBG] Success validating end session request from js
2018-11-04 21:04:41.802 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 21:04:41.802 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:04:41.803 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 21:04:41.803 +08:00 [INF] User logged out.
2018-11-04 21:05:12.508 +08:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2018-11-04 21:05:12.513 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:06:48.297 +08:00 [INF] User created a new account with password.
2018-11-04 21:06:48.303 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:06:48.303 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 21:06:48.303 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 21:06:48.303 +08:00 [DBG] Adding auth_time claim with value: 1541336808
2018-11-04 21:06:48.303 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:08:54.339 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:08:54.339 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:08:54.339 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:08:54.339 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:08:54.339 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:08:54.339 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:08:54.339 +08:00 [DBG] Start discovery request
2018-11-04 21:08:54.348 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 21:08:54.349 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 21:08:54.349 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 21:08:54.349 +08:00 [DBG] Start authorize request
2018-11-04 21:08:54.349 +08:00 [DBG] User in authorize request: 144d766f-e4b2-4208-9562-b45b70763d69
2018-11-04 21:08:54.349 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 21:08:54.349 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:08:54.349 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 21:08:54.349 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "144d766f-e4b2-4208-9562-b45b70763d69",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "0a37b272d90d4b2287428e19aa173a89",
  "Nonce": "622c2febe8b24458a4d1883ab1cb5e5f",
  "SessionId": "afa23e80448abf9e2b93e09ee9d2b8d1",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "0a37b272d90d4b2287428e19aa173a89",
    "nonce": "622c2febe8b24458a4d1883ab1cb5e5f"
  }
}
2018-11-04 21:08:54.351 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 21:08:54.351 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 21:08:54.351 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 21:08:54.351 +08:00 [DBG] Getting claims for access token for subject: 144d766f-e4b2-4208-9562-b45b70763d69
2018-11-04 21:08:54.356 +08:00 [DBG] Getting claims for identity token for subject: 144d766f-e4b2-4208-9562-b45b70763d69 and client: js
2018-11-04 21:08:54.356 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 21:08:54.362 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "144d766f-e4b2-4208-9562-b45b70763d69",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****dT7g"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ZETw"
    }
  ],
  "ActivityId": "0HLI2A9JKP9S0:0000001A",
  "TimeStamp": "2018-11-04T13:08:54Z",
  "ProcessId": 15092,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 21:08:54.362 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "144d766f-e4b2-4208-9562-b45b70763d69",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "0a37b272d90d4b2287428e19aa173a89",
  "Scope": "openid profile api1"
}
2018-11-04 21:08:54.362 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:08:54.362 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:08:54.512 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:08:54.512 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:08:54.512 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:08:54.512 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:08:54.512 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:08:54.512 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:08:54.512 +08:00 [DBG] Start discovery request
2018-11-04 21:08:54.568 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 21:08:54.568 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:08:54.568 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:08:54.568 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 21:08:54.568 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 21:08:54.568 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 21:08:54.568 +08:00 [DBG] Start key discovery request
2018-11-04 21:08:54.623 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:08:54.623 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:08:54.624 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:08:54.629 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:08:54.629 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:08:54.629 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:08:54.629 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 21:08:54.629 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 21:08:54.629 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 21:08:54.629 +08:00 [DBG] Start userinfo request
2018-11-04 21:08:54.629 +08:00 [DBG] Bearer token found in header
2018-11-04 21:08:54.631 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:08:54.631 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:08:54.633 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 21:08:54.634 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541336934,
    "exp": 1541340534,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "144d766f-e4b2-4208-9562-b45b70763d69",
    "auth_time": 1541336808,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 21:08:54.634 +08:00 [DBG] Creating userinfo response
2018-11-04 21:08:54.634 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:08:54.634 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:08:54.634 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 21:08:54.634 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:08:54.636 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 21:08:54.636 +08:00 [DBG] End userinfo request
2018-11-04 21:08:54.652 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:08:54.652 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:08:54.652 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:08:54.653 +08:00 [DBG] Rendering check session result
2018-11-04 21:08:54.920 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:08:54.920 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:08:54.920 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:08:54.920 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:08:54.920 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:08:54.920 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:08:54.920 +08:00 [DBG] Start discovery request
2018-11-04 21:08:55.199 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:08:55.199 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:08:55.199 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:08:55.199 +08:00 [DBG] Rendering check session result
2018-11-04 21:13:44.912 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:13:44.913 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:13:44.913 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:13:44.913 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:13:44.913 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:13:44.913 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:13:44.913 +08:00 [DBG] Start discovery request
2018-11-04 21:13:45.266 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:13:45.266 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:13:45.266 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:13:45.266 +08:00 [DBG] Rendering check session result
2018-11-04 21:13:46.769 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 21:13:46.769 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 21:13:46.769 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 21:13:46.769 +08:00 [DBG] Processing signout request for 144d766f-e4b2-4208-9562-b45b70763d69
2018-11-04 21:13:46.769 +08:00 [DBG] Start end session request validation
2018-11-04 21:13:46.769 +08:00 [DBG] Start identity token validation
2018-11-04 21:13:46.769 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:13:46.769 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 21:13:46.773 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 21:13:46.774 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541336934,
    "exp": 1541337234,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "622c2febe8b24458a4d1883ab1cb5e5f",
    "iat": 1541336934,
    "at_hash": "S-ZGoblKRu2dNLSXegNzCw",
    "sid": "afa23e80448abf9e2b93e09ee9d2b8d1",
    "sub": "144d766f-e4b2-4208-9562-b45b70763d69",
    "auth_time": 1541336808,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 21:13:46.774 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "144d766f-e4b2-4208-9562-b45b70763d69",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzY5MzQsImV4cCI6MTU0MTMzNzIzNCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjYyMmMyZmViZThiMjQ0NThhNGQxODgzYWIxY2I1ZTVmIiwiaWF0IjoxNTQxMzM2OTM0LCJhdF9oYXNoIjoiUy1aR29ibEtSdTJkTkxTWGVnTnpDdyIsInNpZCI6ImFmYTIzZTgwNDQ4YWJmOWUyYjkzZTA5ZWU5ZDJiOGQxIiwic3ViIjoiMTQ0ZDc2NmYtZTRiMi00MjA4LTk1NjItYjQ1YjcwNzYzZDY5IiwiYXV0aF90aW1lIjoxNTQxMzM2ODA4LCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.F1ky8_1ho5BA3XDtR_bzsFzIwlro97u6y5aYaHMevXK-uXOlYhWdeqTK1ihp5uqO_A5gIR8U0OBGCXHBfRfgwJOGnY5GHM77pazQFNUpBwtO87YcLnxMreU4ZXV7N7FY1rbJby-KH2qmbIIYjzFwJAmCq4l5qKh-mSKPEJK7s4mKSklqF9LtXbj7z25ktNiRhmpmR9IDwLD_xcqBt1hpI7tQoTfopDa0CZz35DxPaM2CoaNd51PuqfypszOUyHPdGVDXMLiDui9qDfeG1OdQ6HyrRGgyewqsgUepoBPq3RgqYZ0niCBvmlk_bosSF2vX2Tnm3aJulP6oX3XnIddT7g",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 21:13:46.774 +08:00 [DBG] Success validating end session request from js
2018-11-04 21:13:46.790 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 21:13:46.790 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:13:46.790 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 21:13:46.790 +08:00 [INF] User logged out.
2018-11-04 21:13:59.132 +08:00 [WRN] User 93e725ca-a51c-4637-88af-36870eb31203 validation failed: DuplicateUserName.
2018-11-04 21:14:15.656 +08:00 [INF] User created a new account with password.
2018-11-04 21:14:15.661 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:14:15.661 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 21:14:15.661 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 21:14:15.661 +08:00 [DBG] Adding auth_time claim with value: 1541337255
2018-11-04 21:14:15.662 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:18:50.978 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-04 21:18:51.008 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-04 21:18:51.010 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-04 21:18:51.011 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-04 21:18:51.011 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-04 21:18:51.011 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-04 21:19:03.362 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 21:19:03.366 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:19:03.367 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 21:19:03.368 +08:00 [INF] User logged out.
2018-11-04 21:35:59.441 +08:00 [INF] User created a new account with password.
2018-11-04 21:35:59.563 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:35:59.565 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 21:35:59.566 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 21:35:59.566 +08:00 [DBG] Adding auth_time claim with value: 1541338559
2018-11-04 21:35:59.573 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:37:39.944 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 21:37:39.945 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:37:39.946 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 21:37:39.947 +08:00 [INF] User logged out.
2018-11-04 21:38:33.169 +08:00 [INF] User created a new account with password.
2018-11-04 21:38:35.961 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:38:35.962 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 21:38:35.962 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 21:38:35.963 +08:00 [DBG] Adding auth_time claim with value: 1541338715
2018-11-04 21:38:35.964 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:38:48.741 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:38:48.745 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:38:48.746 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:38:48.747 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:38:48.751 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:38:48.751 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:38:48.756 +08:00 [DBG] Start discovery request
2018-11-04 21:38:48.816 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 21:38:48.819 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 21:38:48.820 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 21:38:48.825 +08:00 [DBG] Start authorize request
2018-11-04 21:38:48.863 +08:00 [DBG] User in authorize request: a02d62d0-fb37-4cae-a845-44a76a3a4f68
2018-11-04 21:38:48.867 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 21:38:48.878 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:38:48.911 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 21:38:48.921 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "a02d62d0-fb37-4cae-a845-44a76a3a4f68",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "6fde3df6a4b7431393e89eb1c5204e3c",
  "Nonce": "63a4904077614577a041dcf1ea02a651",
  "SessionId": "955cb44360abfa5562f66a2dd9997996",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "6fde3df6a4b7431393e89eb1c5204e3c",
    "nonce": "63a4904077614577a041dcf1ea02a651"
  }
}
2018-11-04 21:38:48.941 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 21:38:48.947 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 21:38:48.956 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 21:38:48.956 +08:00 [DBG] Getting claims for access token for subject: a02d62d0-fb37-4cae-a845-44a76a3a4f68
2018-11-04 21:38:49.085 +08:00 [DBG] Getting claims for identity token for subject: a02d62d0-fb37-4cae-a845-44a76a3a4f68 and client: js
2018-11-04 21:38:49.086 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 21:38:49.109 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "a02d62d0-fb37-4cae-a845-44a76a3a4f68",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****umIg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****N0bg"
    }
  ],
  "ActivityId": "0HLI2B082FR99:00000001",
  "TimeStamp": "2018-11-04T13:38:49Z",
  "ProcessId": 13484,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 21:38:49.113 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "a02d62d0-fb37-4cae-a845-44a76a3a4f68",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "6fde3df6a4b7431393e89eb1c5204e3c",
  "Scope": "openid profile api1"
}
2018-11-04 21:38:49.128 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:38:49.129 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:38:49.222 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:38:49.222 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:38:49.223 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:38:49.224 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:38:49.225 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:38:49.225 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:38:49.226 +08:00 [DBG] Start discovery request
2018-11-04 21:38:49.241 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 21:38:49.243 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:38:49.243 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:38:49.244 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 21:38:49.245 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 21:38:49.246 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 21:38:49.250 +08:00 [DBG] Start key discovery request
2018-11-04 21:38:49.288 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:38:49.288 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:38:49.289 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:38:49.293 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:38:49.294 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:38:49.294 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:38:49.294 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 21:38:49.296 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 21:38:49.297 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 21:38:49.302 +08:00 [DBG] Start userinfo request
2018-11-04 21:38:49.304 +08:00 [DBG] Bearer token found in header
2018-11-04 21:38:49.351 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:38:49.353 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:38:49.356 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 21:38:49.359 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541338729,
    "exp": 1541342329,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "a02d62d0-fb37-4cae-a845-44a76a3a4f68",
    "auth_time": 1541338715,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 21:38:49.366 +08:00 [DBG] Creating userinfo response
2018-11-04 21:38:49.369 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:38:49.371 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:38:49.374 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 21:38:49.374 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:38:49.377 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 21:38:49.377 +08:00 [DBG] End userinfo request
2018-11-04 21:38:49.391 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:38:49.392 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:38:49.392 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:38:49.394 +08:00 [DBG] Rendering check session result
2018-11-04 21:38:49.486 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:38:49.487 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:38:49.488 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:38:49.488 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:38:49.489 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:38:49.489 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:38:49.490 +08:00 [DBG] Start discovery request
2018-11-04 21:38:49.499 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:38:49.500 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:38:49.500 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:38:49.500 +08:00 [DBG] Rendering check session result
2018-11-04 21:39:00.578 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 21:39:00.579 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 21:39:00.580 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 21:39:00.584 +08:00 [DBG] Processing signout request for a02d62d0-fb37-4cae-a845-44a76a3a4f68
2018-11-04 21:39:00.592 +08:00 [DBG] Start end session request validation
2018-11-04 21:39:00.600 +08:00 [DBG] Start identity token validation
2018-11-04 21:39:00.602 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:39:00.602 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 21:39:00.608 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 21:39:00.609 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541338729,
    "exp": 1541339029,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "63a4904077614577a041dcf1ea02a651",
    "iat": 1541338729,
    "at_hash": "EPHBrHBMizSSAWj0Nf4oiA",
    "sid": "955cb44360abfa5562f66a2dd9997996",
    "sub": "a02d62d0-fb37-4cae-a845-44a76a3a4f68",
    "auth_time": 1541338715,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 21:39:00.618 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "a02d62d0-fb37-4cae-a845-44a76a3a4f68",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzg3MjksImV4cCI6MTU0MTMzOTAyOSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjYzYTQ5MDQwNzc2MTQ1NzdhMDQxZGNmMWVhMDJhNjUxIiwiaWF0IjoxNTQxMzM4NzI5LCJhdF9oYXNoIjoiRVBIQnJIQk1pelNTQVdqME5mNG9pQSIsInNpZCI6Ijk1NWNiNDQzNjBhYmZhNTU2MmY2NmEyZGQ5OTk3OTk2Iiwic3ViIjoiYTAyZDYyZDAtZmIzNy00Y2FlLWE4NDUtNDRhNzZhM2E0ZjY4IiwiYXV0aF90aW1lIjoxNTQxMzM4NzE1LCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.MLQDpcXvTlnrNFNuKNF75bHt-IRcmnoQ-b4TYgxAostBBFeALTLiUk7h5ec5uqTOq-Ffq6EQaR-3AN_jitby0XZJTp1wb1XIxarfQEEctCuy5IQ9HxMt48YQK2837g_Oh69n3GqdBdb_gajudofRfWAEmAU_h8iiuDwhr8TEsjIuEyINpitOaOszaApNN57fP4jjA0Or9v6amQZSGs7mLJDTWKRVhOaZDEVJCJlqQCC2OmlY5Om5z8unrZvN-DUfsPQ1nz7hKSHjnuHJE-dzvdwmon2_aF73JrcCcz-9Ht1YCuYWYIwyHarBGFu_tRrnJ6G2NFdSzdIdLhEC_tumIg",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 21:39:00.619 +08:00 [DBG] Success validating end session request from js
2018-11-04 21:39:00.639 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 21:39:00.639 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:39:00.639 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 21:39:00.640 +08:00 [INF] User logged out.
2018-11-04 21:39:15.162 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:39:19.751 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:39:19.751 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 21:39:19.751 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 21:39:19.752 +08:00 [DBG] Adding auth_time claim with value: 1541338759
2018-11-04 21:39:19.752 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:39:19.753 +08:00 [INF] User logged in.
2018-11-04 21:39:29.917 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:39:29.918 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:29.918 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:29.919 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:39:29.919 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:39:29.920 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:39:29.920 +08:00 [DBG] Start discovery request
2018-11-04 21:39:29.934 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 21:39:29.935 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 21:39:29.936 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 21:39:29.937 +08:00 [DBG] Start authorize request
2018-11-04 21:39:29.937 +08:00 [DBG] User in authorize request: 8ef6e192-1347-416c-8c18-e90590e3fd33
2018-11-04 21:39:29.945 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 21:39:29.946 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:39:29.946 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 21:39:29.948 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "8ef6e192-1347-416c-8c18-e90590e3fd33",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "e7983f1491d34c0091c1e79e4d4f1001",
  "Nonce": "4cb9be5db8fa48109de2f6dbaefb3c0e",
  "SessionId": "f74bbeaa177624ab835c28d55d371bfe",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "e7983f1491d34c0091c1e79e4d4f1001",
    "nonce": "4cb9be5db8fa48109de2f6dbaefb3c0e"
  }
}
2018-11-04 21:39:29.951 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 21:39:29.955 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 21:39:29.956 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 21:39:29.956 +08:00 [DBG] Getting claims for access token for subject: 8ef6e192-1347-416c-8c18-e90590e3fd33
2018-11-04 21:39:29.967 +08:00 [DBG] Getting claims for identity token for subject: 8ef6e192-1347-416c-8c18-e90590e3fd33 and client: js
2018-11-04 21:39:29.968 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 21:39:29.974 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "8ef6e192-1347-416c-8c18-e90590e3fd33",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Hp9A"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****HtOw"
    }
  ],
  "ActivityId": "0HLI2B082FR9H:00000001",
  "TimeStamp": "2018-11-04T13:39:29Z",
  "ProcessId": 13484,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 21:39:29.976 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "8ef6e192-1347-416c-8c18-e90590e3fd33",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "e7983f1491d34c0091c1e79e4d4f1001",
  "Scope": "openid profile api1"
}
2018-11-04 21:39:29.977 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:39:29.978 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:39:30.032 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:39:30.032 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:30.032 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:30.033 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:39:30.033 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:39:30.033 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:39:30.034 +08:00 [DBG] Start discovery request
2018-11-04 21:39:30.050 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 21:39:30.051 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:30.051 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:30.051 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 21:39:30.052 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 21:39:30.052 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 21:39:30.053 +08:00 [DBG] Start key discovery request
2018-11-04 21:39:30.093 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:39:30.094 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:30.094 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:30.102 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:39:30.103 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:30.104 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:30.104 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 21:39:30.105 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 21:39:30.106 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 21:39:30.107 +08:00 [DBG] Start userinfo request
2018-11-04 21:39:30.108 +08:00 [DBG] Bearer token found in header
2018-11-04 21:39:30.111 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:39:30.111 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:39:30.114 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 21:39:30.114 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541338769,
    "exp": 1541342369,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "8ef6e192-1347-416c-8c18-e90590e3fd33",
    "auth_time": 1541338759,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 21:39:30.115 +08:00 [DBG] Creating userinfo response
2018-11-04 21:39:30.116 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:39:30.116 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:39:30.116 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 21:39:30.117 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:39:30.119 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 21:39:30.119 +08:00 [DBG] End userinfo request
2018-11-04 21:39:30.128 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:39:30.128 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:39:30.129 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:39:30.130 +08:00 [DBG] Rendering check session result
2018-11-04 21:39:30.233 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:39:30.233 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:30.233 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:30.234 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:39:30.234 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:39:30.235 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:39:30.235 +08:00 [DBG] Start discovery request
2018-11-04 21:39:30.248 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:39:30.249 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:39:30.249 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:39:30.250 +08:00 [DBG] Rendering check session result
2018-11-04 21:39:40.987 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 21:39:40.988 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 21:39:40.989 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 21:39:40.990 +08:00 [DBG] Processing signout request for 8ef6e192-1347-416c-8c18-e90590e3fd33
2018-11-04 21:39:40.990 +08:00 [DBG] Start end session request validation
2018-11-04 21:39:40.990 +08:00 [DBG] Start identity token validation
2018-11-04 21:39:40.991 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:39:40.995 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 21:39:41.001 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 21:39:41.004 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541338769,
    "exp": 1541339069,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "4cb9be5db8fa48109de2f6dbaefb3c0e",
    "iat": 1541338769,
    "at_hash": "h1SN0RHA4O0VxoqMTqXmAg",
    "sid": "f74bbeaa177624ab835c28d55d371bfe",
    "sub": "8ef6e192-1347-416c-8c18-e90590e3fd33",
    "auth_time": 1541338759,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 21:39:41.005 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "8ef6e192-1347-416c-8c18-e90590e3fd33",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzg3NjksImV4cCI6MTU0MTMzOTA2OSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjRjYjliZTVkYjhmYTQ4MTA5ZGUyZjZkYmFlZmIzYzBlIiwiaWF0IjoxNTQxMzM4NzY5LCJhdF9oYXNoIjoiaDFTTjBSSEE0TzBWeG9xTVRxWG1BZyIsInNpZCI6ImY3NGJiZWFhMTc3NjI0YWI4MzVjMjhkNTVkMzcxYmZlIiwic3ViIjoiOGVmNmUxOTItMTM0Ny00MTZjLThjMTgtZTkwNTkwZTNmZDMzIiwiYXV0aF90aW1lIjoxNTQxMzM4NzU5LCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.p8Fk6aVXC42Dzxl-p-FsNbHa4tk_aEXMJpVtk-0MSjnqIg6X0ONJkkka2Zxy9SoM0D8X-Iq70BkmD-ZYdw7dpyBBaS5iXO4Ptjv0Mz8BqDWBuAIk8GHtPgv6F9Cj-giNdc6dutFYvEczxG3kngVM0WUQwomodGodeWnm5KpvwcRV_dRiNm0ruZkOcFx6kIFXBOZxxJxIxm38u3IawD4AdSCkQwHwGQXYWoVp2xPfUHFoEifUHSamWnoYhC1Mlhy7ZnsypYOK-kDS4e6LmhO7sS66mJewhCcZLNBvYciFGYJEE3jYay48n6WAm9Mam3aVZS9E597qbqcwfCfJ7aHp9A",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 21:39:41.007 +08:00 [DBG] Success validating end session request from js
2018-11-04 21:39:41.021 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 21:39:41.022 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:39:41.023 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 21:39:41.024 +08:00 [INF] User logged out.
2018-11-04 21:39:48.441 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:39:48.441 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:48.442 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:48.442 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:39:48.442 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:39:48.443 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:39:48.443 +08:00 [DBG] Start discovery request
2018-11-04 21:39:48.450 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 21:39:48.450 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 21:39:48.451 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 21:39:48.451 +08:00 [DBG] Start authorize request
2018-11-04 21:39:48.451 +08:00 [DBG] No user present in authorize request
2018-11-04 21:39:48.452 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 21:39:48.452 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:39:48.453 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 21:39:48.453 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "845b836b8e0f4526b25ac93528909334",
  "Nonce": "d09348d6dbd546aab4a63ae645ce556c",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "845b836b8e0f4526b25ac93528909334",
    "nonce": "d09348d6dbd546aab4a63ae645ce556c"
  }
}
2018-11-04 21:39:48.454 +08:00 [INF] Showing login: User is not authenticated
2018-11-04 21:39:48.461 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:39:53.848 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:39:53.849 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 21:39:53.849 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 21:39:53.849 +08:00 [DBG] Adding auth_time claim with value: 1541338793
2018-11-04 21:39:53.850 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:39:53.850 +08:00 [INF] User logged in.
2018-11-04 21:39:53.855 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-11-04 21:39:53.856 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-11-04 21:39:53.856 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-11-04 21:39:53.861 +08:00 [DBG] Start authorize callback request
2018-11-04 21:39:53.864 +08:00 [DBG] User in authorize request: 149acab5-6f95-4e78-874f-3a876d20622f
2018-11-04 21:39:53.865 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 21:39:53.865 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:39:53.865 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 21:39:53.866 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "149acab5-6f95-4e78-874f-3a876d20622f",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "845b836b8e0f4526b25ac93528909334",
  "Nonce": "d09348d6dbd546aab4a63ae645ce556c",
  "SessionId": "a1a3ecf40b82fcf397e83c51fc0a5d3a",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "845b836b8e0f4526b25ac93528909334",
    "nonce": "d09348d6dbd546aab4a63ae645ce556c"
  }
}
2018-11-04 21:39:53.869 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 21:39:53.870 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 21:39:53.870 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 21:39:53.870 +08:00 [DBG] Getting claims for access token for subject: 149acab5-6f95-4e78-874f-3a876d20622f
2018-11-04 21:39:53.877 +08:00 [DBG] Getting claims for identity token for subject: 149acab5-6f95-4e78-874f-3a876d20622f and client: js
2018-11-04 21:39:53.878 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 21:39:53.881 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "149acab5-6f95-4e78-874f-3a876d20622f",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****NUiw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****NDAg"
    }
  ],
  "ActivityId": "0HLI2B082FR9N:00000002",
  "TimeStamp": "2018-11-04T13:39:53Z",
  "ProcessId": 13484,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 21:39:53.883 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "149acab5-6f95-4e78-874f-3a876d20622f",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "845b836b8e0f4526b25ac93528909334",
  "Scope": "openid profile api1"
}
2018-11-04 21:39:53.883 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:39:53.884 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:39:54.021 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:39:54.021 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:54.022 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:54.022 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:39:54.023 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:39:54.024 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:39:54.024 +08:00 [DBG] Start discovery request
2018-11-04 21:39:54.032 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 21:39:54.033 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:54.033 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:54.034 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 21:39:54.034 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 21:39:54.035 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 21:39:54.036 +08:00 [DBG] Start key discovery request
2018-11-04 21:39:54.057 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:39:54.058 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:54.058 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:54.062 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:39:54.062 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:54.062 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:54.063 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 21:39:54.063 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 21:39:54.064 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 21:39:54.064 +08:00 [DBG] Start userinfo request
2018-11-04 21:39:54.064 +08:00 [DBG] Bearer token found in header
2018-11-04 21:39:54.067 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:39:54.067 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:39:54.069 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 21:39:54.070 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541338793,
    "exp": 1541342393,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "149acab5-6f95-4e78-874f-3a876d20622f",
    "auth_time": 1541338793,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 21:39:54.071 +08:00 [DBG] Creating userinfo response
2018-11-04 21:39:54.071 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:39:54.071 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:39:54.072 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 21:39:54.072 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:39:54.075 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 21:39:54.075 +08:00 [DBG] End userinfo request
2018-11-04 21:39:54.087 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:39:54.088 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:39:54.089 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:39:54.089 +08:00 [DBG] Rendering check session result
2018-11-04 21:39:54.213 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:39:54.213 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:39:54.214 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:39:54.214 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:39:54.215 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:39:54.215 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:39:54.215 +08:00 [DBG] Start discovery request
2018-11-04 21:39:54.393 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:39:54.393 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:39:54.394 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:39:54.394 +08:00 [DBG] Rendering check session result
2018-11-04 21:40:00.351 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 21:40:00.352 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 21:40:00.352 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 21:40:00.355 +08:00 [DBG] Processing signout request for 149acab5-6f95-4e78-874f-3a876d20622f
2018-11-04 21:40:00.356 +08:00 [DBG] Start end session request validation
2018-11-04 21:40:00.357 +08:00 [DBG] Start identity token validation
2018-11-04 21:40:00.357 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:40:00.358 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 21:40:00.364 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 21:40:00.365 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541338793,
    "exp": 1541339093,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "d09348d6dbd546aab4a63ae645ce556c",
    "iat": 1541338793,
    "at_hash": "PeBBiTEFlPWbIwoRC8buhg",
    "sid": "a1a3ecf40b82fcf397e83c51fc0a5d3a",
    "sub": "149acab5-6f95-4e78-874f-3a876d20622f",
    "auth_time": 1541338793,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 21:40:00.370 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "149acab5-6f95-4e78-874f-3a876d20622f",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzg3OTMsImV4cCI6MTU0MTMzOTA5MywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6ImQwOTM0OGQ2ZGJkNTQ2YWFiNGE2M2FlNjQ1Y2U1NTZjIiwiaWF0IjoxNTQxMzM4NzkzLCJhdF9oYXNoIjoiUGVCQmlURUZsUFdiSXdvUkM4YnVoZyIsInNpZCI6ImExYTNlY2Y0MGI4MmZjZjM5N2U4M2M1MWZjMGE1ZDNhIiwic3ViIjoiMTQ5YWNhYjUtNmY5NS00ZTc4LTg3NGYtM2E4NzZkMjA2MjJmIiwiYXV0aF90aW1lIjoxNTQxMzM4NzkzLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.ZU8TTpRzzqFkOFOvsKtvKymQusl0HrVKqoqbuFRgNXn2liaLK4AOsVZOFyNfwbOAk4pearw2n4l7CWD7-xdIMPbEKBq15qfSFzRijpdUDo_6gy5CcIP6YWiDQwtSzqQ-7aNK7TNZ3x5Vm6kf6GJ3tardMejPNFst9QpJXINGLtoMKZlCjRDH_JZ2Sc54cxH-H2hzH_8jLnpI-pqFCdLAcGuXy3j3wdMfbEZURz6bAdFIMxrSX6lx_bGncPviOP_83xQRkUXgm8eJ65AKu5Tv5pruGHjNvZ5ptYZ1KNP5e0ZDXTY3ni7glc08pWTf3eh8GecNxNICQKNSpeViOJNUiw",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 21:40:00.378 +08:00 [DBG] Success validating end session request from js
2018-11-04 21:40:00.382 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 21:40:00.383 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:40:00.384 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 21:40:00.384 +08:00 [INF] User logged out.
2018-11-04 21:40:03.606 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:40:03.607 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:40:03.607 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:40:03.608 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:40:03.608 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:40:03.609 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:40:03.609 +08:00 [DBG] Start discovery request
2018-11-04 21:40:03.619 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 21:40:03.619 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 21:40:03.620 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 21:40:03.620 +08:00 [DBG] Start authorize request
2018-11-04 21:40:03.621 +08:00 [DBG] No user present in authorize request
2018-11-04 21:40:03.621 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 21:40:03.621 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:40:03.622 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 21:40:03.622 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "c1a305d18eb745e8bd28477658f98464",
  "Nonce": "a6dbda3c92684bdb9cc8f65c672dda16",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "c1a305d18eb745e8bd28477658f98464",
    "nonce": "a6dbda3c92684bdb9cc8f65c672dda16"
  }
}
2018-11-04 21:40:03.623 +08:00 [INF] Showing login: User is not authenticated
2018-11-04 21:40:03.629 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:40:07.455 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:40:07.456 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 21:40:07.456 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 21:40:07.456 +08:00 [DBG] Adding auth_time claim with value: 1541338807
2018-11-04 21:40:07.457 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:40:07.457 +08:00 [INF] User logged in.
2018-11-04 21:40:07.460 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-11-04 21:40:07.461 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-11-04 21:40:07.461 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-11-04 21:40:07.462 +08:00 [DBG] Start authorize callback request
2018-11-04 21:40:07.462 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 21:40:07.463 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 21:40:07.463 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:40:07.463 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 21:40:07.464 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "c1a305d18eb745e8bd28477658f98464",
  "Nonce": "a6dbda3c92684bdb9cc8f65c672dda16",
  "SessionId": "4e8eec18962043d515307507c85a188a",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "c1a305d18eb745e8bd28477658f98464",
    "nonce": "a6dbda3c92684bdb9cc8f65c672dda16"
  }
}
2018-11-04 21:40:07.467 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 21:40:07.467 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 21:40:07.468 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 21:40:07.468 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 21:40:07.476 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 21:40:07.477 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 21:40:07.481 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****0umQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****rYSw"
    }
  ],
  "ActivityId": "0HLI2B082FR9S:00000005",
  "TimeStamp": "2018-11-04T13:40:07Z",
  "ProcessId": 13484,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 21:40:07.482 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "c1a305d18eb745e8bd28477658f98464",
  "Scope": "openid profile api1"
}
2018-11-04 21:40:07.483 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:40:07.483 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:40:07.561 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:40:07.561 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:40:07.561 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:40:07.562 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:40:07.562 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:40:07.563 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:40:07.563 +08:00 [DBG] Start discovery request
2018-11-04 21:40:07.577 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 21:40:07.578 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:40:07.578 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:40:07.578 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 21:40:07.579 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 21:40:07.579 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 21:40:07.579 +08:00 [DBG] Start key discovery request
2018-11-04 21:40:07.596 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:40:07.597 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:40:07.597 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:40:07.601 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:40:07.602 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:40:07.604 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:40:07.604 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 21:40:07.606 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 21:40:07.607 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 21:40:07.608 +08:00 [DBG] Start userinfo request
2018-11-04 21:40:07.608 +08:00 [DBG] Bearer token found in header
2018-11-04 21:40:07.611 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:40:07.611 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:40:07.614 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 21:40:07.614 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541338807,
    "exp": 1541342407,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541338807,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 21:40:07.615 +08:00 [DBG] Creating userinfo response
2018-11-04 21:40:07.615 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:40:07.616 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:40:07.616 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 21:40:07.616 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:40:07.619 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 21:40:07.619 +08:00 [DBG] End userinfo request
2018-11-04 21:40:07.628 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:40:07.629 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:40:07.629 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:40:07.630 +08:00 [DBG] Rendering check session result
2018-11-04 21:40:07.727 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:40:07.728 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:40:07.728 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:40:07.728 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:40:07.729 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:40:07.729 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:40:07.730 +08:00 [DBG] Start discovery request
2018-11-04 21:40:07.911 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:40:07.911 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:40:07.912 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:40:07.912 +08:00 [DBG] Rendering check session result
2018-11-04 21:45:23.281 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:45:23.282 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:45:23.282 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:45:23.283 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:45:23.283 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:45:23.284 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:45:23.284 +08:00 [DBG] Start discovery request
2018-11-04 21:45:23.605 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:45:23.608 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:45:23.609 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:45:23.610 +08:00 [DBG] Rendering check session result
2018-11-04 21:52:12.596 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-04 21:52:12.624 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-04 21:52:12.627 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-04 21:52:12.627 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-04 21:52:12.627 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-04 21:52:12.627 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-04 21:52:26.305 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:52:26.311 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:52:26.311 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:52:26.341 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:52:26.508 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:52:26.508 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:52:26.510 +08:00 [DBG] Start discovery request
2018-11-04 21:52:26.577 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 21:52:26.591 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 21:52:26.591 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 21:52:26.596 +08:00 [DBG] Start authorize request
2018-11-04 21:52:26.606 +08:00 [DBG] No user present in authorize request
2018-11-04 21:52:26.613 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 21:52:26.623 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:52:26.651 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 21:52:26.660 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "948217185f124e7d868ad53fb0f383a7",
  "Nonce": "8b91d500caf1455a811bf93ef834b24b",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "948217185f124e7d868ad53fb0f383a7",
    "nonce": "8b91d500caf1455a811bf93ef834b24b"
  }
}
2018-11-04 21:52:26.666 +08:00 [INF] Showing login: User is not authenticated
2018-11-04 21:52:26.950 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 21:52:29.884 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:52:29.886 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 21:52:29.887 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 21:52:29.887 +08:00 [DBG] Adding auth_time claim with value: 1541339549
2018-11-04 21:52:29.893 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:52:29.893 +08:00 [INF] User logged in.
2018-11-04 21:52:29.900 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-11-04 21:52:29.901 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-11-04 21:52:29.901 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-11-04 21:52:29.905 +08:00 [DBG] Start authorize callback request
2018-11-04 21:52:29.908 +08:00 [DBG] User in authorize request: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 21:52:29.908 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 21:52:29.908 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:52:29.908 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 21:52:29.908 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "948217185f124e7d868ad53fb0f383a7",
  "Nonce": "8b91d500caf1455a811bf93ef834b24b",
  "SessionId": "bfc498c893b6287f052e210acc5209a7",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "948217185f124e7d868ad53fb0f383a7",
    "nonce": "8b91d500caf1455a811bf93ef834b24b"
  }
}
2018-11-04 21:52:29.954 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 21:52:29.964 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 21:52:29.977 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 21:52:29.977 +08:00 [DBG] Getting claims for access token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 21:52:30.048 +08:00 [DBG] Getting claims for identity token for subject: dd92e587-a72b-4638-9a8e-e00bbc87cecf and client: js
2018-11-04 21:52:30.048 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 21:52:30.073 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****w7ag"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****WmXQ"
    }
  ],
  "ActivityId": "0HLI2BJ0G07UG:00000005",
  "TimeStamp": "2018-11-04T13:52:30Z",
  "ProcessId": 11640,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 21:52:30.076 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "948217185f124e7d868ad53fb0f383a7",
  "Scope": "openid profile api1"
}
2018-11-04 21:52:30.091 +08:00 [DBG] Augmenting SignInContext
2018-11-04 21:52:30.091 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 21:52:30.253 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:52:30.253 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:52:30.253 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:52:30.253 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:52:30.254 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:52:30.254 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:52:30.254 +08:00 [DBG] Start discovery request
2018-11-04 21:52:30.274 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 21:52:30.274 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:52:30.274 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:52:30.274 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 21:52:30.275 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 21:52:30.275 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 21:52:30.279 +08:00 [DBG] Start key discovery request
2018-11-04 21:52:30.317 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:52:30.317 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:52:30.317 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:52:30.322 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 21:52:30.322 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:52:30.323 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:52:30.323 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 21:52:30.324 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 21:52:30.324 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 21:52:30.330 +08:00 [DBG] Start userinfo request
2018-11-04 21:52:30.334 +08:00 [DBG] Bearer token found in header
2018-11-04 21:52:30.387 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:52:30.389 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 21:52:30.392 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 21:52:30.395 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541339550,
    "exp": 1541343150,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541339549,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 21:52:30.400 +08:00 [DBG] Creating userinfo response
2018-11-04 21:52:30.403 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:52:30.405 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:52:30.408 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 21:52:30.408 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 21:52:30.411 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 21:52:30.411 +08:00 [DBG] End userinfo request
2018-11-04 21:52:30.420 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:52:30.420 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:52:30.420 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:52:30.421 +08:00 [DBG] Rendering check session result
2018-11-04 21:52:30.551 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:52:30.551 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:52:30.552 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:52:30.552 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:52:30.552 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:52:30.552 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:52:30.552 +08:00 [DBG] Start discovery request
2018-11-04 21:52:30.563 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:52:30.564 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:52:30.564 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:52:30.564 +08:00 [DBG] Rendering check session result
2018-11-04 21:52:58.733 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:52:58.734 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:52:58.734 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:52:58.734 +08:00 [DBG] Start discovery request
2018-11-04 21:52:58.924 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 21:52:58.924 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 21:52:58.924 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 21:52:58.924 +08:00 [DBG] Start key discovery request
2018-11-04 21:59:33.283 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:59:33.283 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:59:33.283 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:59:33.283 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:59:33.284 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:59:33.284 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:59:33.284 +08:00 [DBG] Start discovery request
2018-11-04 21:59:33.634 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:59:33.634 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:59:33.634 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:59:33.634 +08:00 [DBG] Rendering check session result
2018-11-04 21:59:44.640 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 21:59:44.640 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 21:59:44.640 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 21:59:44.640 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 21:59:44.640 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 21:59:44.640 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 21:59:44.640 +08:00 [DBG] Start discovery request
2018-11-04 21:59:44.960 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 21:59:44.960 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 21:59:44.960 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 21:59:44.960 +08:00 [DBG] Rendering check session result
2018-11-04 22:01:23.482 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 22:01:23.482 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 22:01:23.482 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 22:01:23.486 +08:00 [DBG] Processing signout request for dd92e587-a72b-4638-9a8e-e00bbc87cecf
2018-11-04 22:01:23.490 +08:00 [DBG] Start end session request validation
2018-11-04 22:01:23.495 +08:00 [DBG] Start identity token validation
2018-11-04 22:01:23.496 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 22:01:23.496 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 22:01:23.510 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 22:01:23.511 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541339550,
    "exp": 1541339850,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "8b91d500caf1455a811bf93ef834b24b",
    "iat": 1541339550,
    "at_hash": "vtbUrW4eJoqU-blVl5yJew",
    "sid": "bfc498c893b6287f052e210acc5209a7",
    "sub": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
    "auth_time": 1541339549,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 22:01:23.515 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "dd92e587-a72b-4638-9a8e-e00bbc87cecf",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzMzk1NTAsImV4cCI6MTU0MTMzOTg1MCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6IjhiOTFkNTAwY2FmMTQ1NWE4MTFiZjkzZWY4MzRiMjRiIiwiaWF0IjoxNTQxMzM5NTUwLCJhdF9oYXNoIjoidnRiVXJXNGVKb3FVLWJsVmw1eUpldyIsInNpZCI6ImJmYzQ5OGM4OTNiNjI4N2YwNTJlMjEwYWNjNTIwOWE3Iiwic3ViIjoiZGQ5MmU1ODctYTcyYi00NjM4LTlhOGUtZTAwYmJjODdjZWNmIiwiYXV0aF90aW1lIjoxNTQxMzM5NTQ5LCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.eRz1vHPG1bwMfm7MKnCSBB81zvT1ptGpr59e9Fp49jjUeK6VABAHBSPaC7CnbnozXbCzyQTpJKJnNysbYh5L7nRgLl7aNSAOtsUPLjuwwhtxpUER3CD50JIXMfcXquA6PjlRa7ga2I07N_6tUcLK-k-VS-dQgAXDmXxJrgpU24IPqtjmqFKFIAe-iZgdlRmNajYYkpQDw6xxfeSQnpJEH0mxXN3yZzfrSugXkhLDIQoXqKiQDDMOF-GWQaswRc6Ma8Uc7afA4Cx8MmjAQS9G85xw_1nUzGL7qLKBlqvhESG2AXGe_CjTxj1TbEWpGMWSe8h6NQFDLKFIYI_djFw7ag",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 22:01:23.516 +08:00 [DBG] Success validating end session request from js
2018-11-04 22:01:23.539 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 22:01:23.539 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 22:01:23.539 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 22:01:23.539 +08:00 [INF] User logged out.
2018-11-04 22:01:25.467 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 22:01:25.467 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 22:01:25.467 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 22:01:25.467 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 22:01:25.468 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 22:01:25.468 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 22:01:25.468 +08:00 [DBG] Start discovery request
2018-11-04 22:01:25.477 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-04 22:01:25.477 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-04 22:01:25.477 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-04 22:01:25.477 +08:00 [DBG] Start authorize request
2018-11-04 22:01:25.477 +08:00 [DBG] No user present in authorize request
2018-11-04 22:01:25.477 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 22:01:25.477 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 22:01:25.478 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 22:01:25.478 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "642cde7b2a254278aabcdd4b69eafa35",
  "Nonce": "87bc6bf068614f44854f32ee619b5fc0",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "642cde7b2a254278aabcdd4b69eafa35",
    "nonce": "87bc6bf068614f44854f32ee619b5fc0"
  }
}
2018-11-04 22:01:25.478 +08:00 [INF] Showing login: User is not authenticated
2018-11-04 22:01:25.483 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 22:01:31.747 +08:00 [DBG] Augmenting SignInContext
2018-11-04 22:01:31.748 +08:00 [DBG] Adding idp claim with value: local
2018-11-04 22:01:31.748 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-04 22:01:31.748 +08:00 [DBG] Adding auth_time claim with value: 1541340091
2018-11-04 22:01:31.748 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 22:01:31.748 +08:00 [INF] User logged in.
2018-11-04 22:01:31.752 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-11-04 22:01:31.752 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-11-04 22:01:31.752 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-11-04 22:01:31.753 +08:00 [DBG] Start authorize callback request
2018-11-04 22:01:31.753 +08:00 [DBG] User in authorize request: 144d766f-e4b2-4208-9562-b45b70763d69
2018-11-04 22:01:31.753 +08:00 [DBG] Start authorize request protocol validation
2018-11-04 22:01:31.753 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 22:01:31.753 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-04 22:01:31.753 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "144d766f-e4b2-4208-9562-b45b70763d69",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "642cde7b2a254278aabcdd4b69eafa35",
  "Nonce": "87bc6bf068614f44854f32ee619b5fc0",
  "SessionId": "5c9708c77c3379eddcee3d619ee8c818",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "642cde7b2a254278aabcdd4b69eafa35",
    "nonce": "87bc6bf068614f44854f32ee619b5fc0"
  }
}
2018-11-04 22:01:31.755 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-04 22:01:31.756 +08:00 [DBG] Creating Implicit Flow response.
2018-11-04 22:01:31.756 +08:00 [DBG] Getting claims for access token for client: js
2018-11-04 22:01:31.756 +08:00 [DBG] Getting claims for access token for subject: 144d766f-e4b2-4208-9562-b45b70763d69
2018-11-04 22:01:31.765 +08:00 [DBG] Getting claims for identity token for subject: 144d766f-e4b2-4208-9562-b45b70763d69 and client: js
2018-11-04 22:01:31.765 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-04 22:01:31.770 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "144d766f-e4b2-4208-9562-b45b70763d69",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****klCQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****jfvQ"
    }
  ],
  "ActivityId": "0HLI2BJ0G07UL:00000005",
  "TimeStamp": "2018-11-04T14:01:31Z",
  "ProcessId": 11640,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-04 22:01:31.770 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "144d766f-e4b2-4208-9562-b45b70763d69",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "642cde7b2a254278aabcdd4b69eafa35",
  "Scope": "openid profile api1"
}
2018-11-04 22:01:31.771 +08:00 [DBG] Augmenting SignInContext
2018-11-04 22:01:31.771 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-04 22:01:31.928 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 22:01:31.928 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 22:01:31.929 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 22:01:31.929 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 22:01:31.929 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 22:01:31.929 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 22:01:31.929 +08:00 [DBG] Start discovery request
2018-11-04 22:01:31.990 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-04 22:01:31.990 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 22:01:31.990 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 22:01:31.990 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-04 22:01:31.990 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-04 22:01:31.990 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-04 22:01:31.990 +08:00 [DBG] Start key discovery request
2018-11-04 22:01:32.046 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 22:01:32.046 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 22:01:32.046 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 22:01:32.056 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-04 22:01:32.056 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 22:01:32.056 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 22:01:32.056 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-04 22:01:32.056 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-04 22:01:32.056 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-04 22:01:32.056 +08:00 [DBG] Start userinfo request
2018-11-04 22:01:32.056 +08:00 [DBG] Bearer token found in header
2018-11-04 22:01:32.063 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 22:01:32.063 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 22:01:32.065 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 22:01:32.065 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541340091,
    "exp": 1541343691,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "144d766f-e4b2-4208-9562-b45b70763d69",
    "auth_time": 1541340091,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-04 22:01:32.066 +08:00 [DBG] Creating userinfo response
2018-11-04 22:01:32.066 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 22:01:32.066 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 22:01:32.066 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-04 22:01:32.066 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-04 22:01:32.069 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-04 22:01:32.069 +08:00 [DBG] End userinfo request
2018-11-04 22:01:32.098 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 22:01:32.099 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 22:01:32.099 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 22:01:32.099 +08:00 [DBG] Rendering check session result
2018-11-04 22:01:32.351 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-04 22:01:32.351 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-04 22:01:32.351 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-04 22:01:32.351 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-04 22:01:32.352 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-04 22:01:32.352 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-04 22:01:32.352 +08:00 [DBG] Start discovery request
2018-11-04 22:01:32.390 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-04 22:01:32.390 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-04 22:01:32.390 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-04 22:01:32.390 +08:00 [DBG] Rendering check session result
2018-11-04 22:01:38.146 +08:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-11-04 22:01:38.147 +08:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-11-04 22:01:38.147 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-11-04 22:01:38.147 +08:00 [DBG] Processing signout request for 144d766f-e4b2-4208-9562-b45b70763d69
2018-11-04 22:01:38.147 +08:00 [DBG] Start end session request validation
2018-11-04 22:01:38.147 +08:00 [DBG] Start identity token validation
2018-11-04 22:01:38.147 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-04 22:01:38.147 +08:00 [DBG] Client found: js / JavaScript Client
2018-11-04 22:01:38.151 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-04 22:01:38.151 +08:00 [DBG] Token validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1541340091,
    "exp": 1541340391,
    "iss": "http://localhost:7001",
    "aud": "js",
    "nonce": "87bc6bf068614f44854f32ee619b5fc0",
    "iat": 1541340091,
    "at_hash": "lZdCPlDxulEDjmBksM3W-A",
    "sid": "5c9708c77c3379eddcee3d619ee8c818",
    "sub": "144d766f-e4b2-4208-9562-b45b70763d69",
    "auth_time": 1541340091,
    "idp": "local",
    "amr": "pwd"
  }
}
2018-11-04 22:01:38.151 +08:00 [INF] End session request validation success
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "SubjectId": "144d766f-e4b2-4208-9562-b45b70763d69",
  "PostLogOutUri": "http://localhost:7003",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMmMwNmI1NTY4Y2M5MzJiYTZiZTFkMGRhMmE1YmNlIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDEzNDAwOTEsImV4cCI6MTU0MTM0MDM5MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo3MDAxIiwiYXVkIjoianMiLCJub25jZSI6Ijg3YmM2YmYwNjg2MTRmNDQ4NTRmMzJlZTYxOWI1ZmMwIiwiaWF0IjoxNTQxMzQwMDkxLCJhdF9oYXNoIjoibFpkQ1BsRHh1bEVEam1Ca3NNM1ctQSIsInNpZCI6IjVjOTcwOGM3N2MzMzc5ZWRkY2VlM2Q2MTllZThjODE4Iiwic3ViIjoiMTQ0ZDc2NmYtZTRiMi00MjA4LTk1NjItYjQ1YjcwNzYzZDY5IiwiYXV0aF90aW1lIjoxNTQxMzQwMDkxLCJpZHAiOiJsb2NhbCIsImFtciI6WyJwd2QiXX0.Ts8vOfFcrqABnTXPNl_qUVOsghcJhOBTx7JVqB_mlygokzYs0-CwFk1ecrCqYaO77oAm8frr4NFDXsE-BstIbnpvZMcWO4BKR7ozODxEVbZOh4zYzsNsAU6ly8ST8c5OP4Zu1n-Yzt5fFNjio8LFmzfOdt1tTDDtnrbD5vorXgdYWTzyccSbym9v15WuR5Cwmy2QPqNa40pY7oBXc2g-d0wi9GGZ30AXTJQGJHhEquudn7Pka0Ed_pu4OdGjdMrQkGKn9dVvkXlOTzrxslcAXT_zlmlla6H2q25-8I-Eff6aD3990E0lMLnkQtKSwMXee3LiUHtEwGbiBvFd4tklCQ",
    "post_logout_redirect_uri": "http://localhost:7003"
  }
}
2018-11-04 22:01:38.151 +08:00 [DBG] Success validating end session request from js
2018-11-04 22:01:38.155 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-04 22:01:38.155 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-04 22:01:38.155 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-04 22:01:38.155 +08:00 [INF] User logged out.
2018-11-05 14:07:36.860 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 14:07:36.892 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 14:07:36.895 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 14:07:36.895 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 14:07:36.895 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 14:07:36.895 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 14:08:15.527 +08:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2018-11-05 14:08:15.595 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-05 14:09:07.249 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The 'Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinder' cannot bind to a model of type 'Microsoft.AspNetCore.Http.FormCollection'. Change the model type to 'Microsoft.AspNetCore.Http.IFormCollection' instead.
   at Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider.GetBinder(ModelBinderProviderContext context)
   at Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory.CreateBinderCoreUncached(DefaultModelBinderProviderContext providerContext, Object token)
   at Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory.CreateBinder(ModelBinderFactoryContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerBinderDelegateProvider.GetParameterBindingInfo(IModelBinderFactory modelBinderFactory, IModelMetadataProvider modelMetadataProvider, ControllerActionDescriptor actionDescriptor, MvcOptions mvcOptions)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerBinderDelegateProvider.CreateBinderDelegate(ParameterBinder parameterBinder, IModelBinderFactory modelBinderFactory, IModelMetadataProvider modelMetadataProvider, ControllerActionDescriptor actionDescriptor, MvcOptions mvcOptions)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.GetCachedResult(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerProvider.OnProvidersExecuting(ActionInvokerProviderContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ActionInvokerFactory.CreateInvoker(ActionContext actionContext)
   at Microsoft.AspNetCore.Mvc.Internal.MvcRouteHandler.<>c__DisplayClass8_0.<RouteAsync>b__0(HttpContext c)
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-11-05 14:10:10.942 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 14:10:10.972 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 14:10:10.974 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 14:10:10.974 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 14:10:10.975 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 14:10:10.975 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 15:25:27.573 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 15:25:27.608 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 15:25:27.610 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 15:25:27.611 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 15:25:27.611 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 15:25:27.611 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 15:26:08.193 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception was thrown while attempting to evaluate a LINQ query parameter expression. To show additional information call EnableSensitiveDataLogging() when overriding DbContext.OnConfiguring. ---> System.InvalidOperationException: Sequence contains no elements
   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)
   at lambda_method(Closure )
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.TryExtractParameter(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression node)
   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitLambda[T](Expression`1 node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitLambda[T](Expression`1 node)
   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitUnary(UnaryExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitUnary(UnaryExpression unaryExpression)
   at System.Linq.Expressions.UnaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Dynamic.Utils.ExpressionVisitorUtils.VisitArguments(ExpressionVisitor visitor, IArgumentProvider nodes)
   at System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.ExtractParameters(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at System.Linq.Queryable.Single[TSource](IQueryable`1 source, Expression`1 predicate)
   at taggie.Controllers.UserController.EditUser(String id) in C:\can.zhang\project\taggie\taggie\Controllers\UserController.cs:line 92
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-11-05 15:26:18.211 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception was thrown while attempting to evaluate a LINQ query parameter expression. To show additional information call EnableSensitiveDataLogging() when overriding DbContext.OnConfiguring. ---> System.InvalidOperationException: Sequence contains no elements
   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)
   at lambda_method(Closure )
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.TryExtractParameter(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression node)
   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitLambda[T](Expression`1 node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitLambda[T](Expression`1 node)
   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitUnary(UnaryExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitUnary(UnaryExpression unaryExpression)
   at System.Linq.Expressions.UnaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Dynamic.Utils.ExpressionVisitorUtils.VisitArguments(ExpressionVisitor visitor, IArgumentProvider nodes)
   at System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.ExtractParameters(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at System.Linq.Queryable.Single[TSource](IQueryable`1 source, Expression`1 predicate)
   at taggie.Controllers.UserController.EditUser(String id) in C:\can.zhang\project\taggie\taggie\Controllers\UserController.cs:line 92
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-11-05 15:27:37.324 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 15:27:37.352 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 15:27:37.355 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 15:27:37.355 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 15:27:37.355 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 15:27:37.355 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 15:27:43.712 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception was thrown while attempting to evaluate a LINQ query parameter expression. To show additional information call EnableSensitiveDataLogging() when overriding DbContext.OnConfiguring. ---> System.InvalidOperationException: Sequence contains no elements
   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)
   at lambda_method(Closure )
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.TryExtractParameter(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression node)
   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitLambda[T](Expression`1 node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitLambda[T](Expression`1 node)
   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitUnary(UnaryExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitUnary(UnaryExpression unaryExpression)
   at System.Linq.Expressions.UnaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Dynamic.Utils.ExpressionVisitorUtils.VisitArguments(ExpressionVisitor visitor, IArgumentProvider nodes)
   at System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.ExtractParameters(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at System.Linq.Queryable.Single[TSource](IQueryable`1 source, Expression`1 predicate)
   at taggie.Controllers.UserController.EditUser(String id) in C:\can.zhang\project\taggie\taggie\Controllers\UserController.cs:line 92
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-11-05 15:32:19.956 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 15:32:19.984 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 15:32:19.986 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 15:32:19.986 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 15:32:19.987 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 15:32:19.987 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 15:32:57.081 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-05 15:32:57.085 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-05 15:32:57.086 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-05 15:32:57.089 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-05 15:32:57.094 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-05 15:32:57.095 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-05 15:32:57.100 +08:00 [DBG] Start discovery request
2018-11-05 15:32:57.153 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-11-05 15:32:57.158 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-11-05 15:32:57.159 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-11-05 15:32:57.195 +08:00 [DBG] Start authorize request
2018-11-05 15:32:57.209 +08:00 [DBG] No user present in authorize request
2018-11-05 15:32:57.214 +08:00 [DBG] Start authorize request protocol validation
2018-11-05 15:32:57.224 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-05 15:32:57.257 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-05 15:32:57.268 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "f36880e16aa244a09df6356bcb2553e8",
  "Nonce": "ea38d1e60e5148ad9a9aa1f420c324bd",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "f36880e16aa244a09df6356bcb2553e8",
    "nonce": "ea38d1e60e5148ad9a9aa1f420c324bd"
  }
}
2018-11-05 15:32:57.278 +08:00 [INF] Showing login: User is not authenticated
2018-11-05 15:32:57.305 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-05 15:33:13.348 +08:00 [DBG] Augmenting SignInContext
2018-11-05 15:33:13.350 +08:00 [DBG] Adding idp claim with value: local
2018-11-05 15:33:13.351 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-05 15:33:13.352 +08:00 [DBG] Adding auth_time claim with value: 1541403193
2018-11-05 15:33:13.359 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-05 15:33:13.360 +08:00 [INF] User logged in.
2018-11-05 15:33:13.368 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-11-05 15:33:13.369 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-11-05 15:33:13.370 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-11-05 15:33:13.377 +08:00 [DBG] Start authorize callback request
2018-11-05 15:33:13.380 +08:00 [DBG] User in authorize request: 144d766f-e4b2-4208-9562-b45b70763d69
2018-11-05 15:33:13.381 +08:00 [DBG] Start authorize request protocol validation
2018-11-05 15:33:13.383 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-05 15:33:13.384 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-11-05 15:33:13.386 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:7003/callback.html"
  ],
  "SubjectId": "144d766f-e4b2-4208-9562-b45b70763d69",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "f36880e16aa244a09df6356bcb2553e8",
  "Nonce": "ea38d1e60e5148ad9a9aa1f420c324bd",
  "SessionId": "c2a18efdc28bcdc2886ac83324eb2efd",
  "Raw": {
    "client_id": "js",
    "redirect_uri": "http://localhost:7003/callback.html",
    "response_type": "token id_token",
    "scope": "openid profile api1",
    "state": "f36880e16aa244a09df6356bcb2553e8",
    "nonce": "ea38d1e60e5148ad9a9aa1f420c324bd"
  }
}
2018-11-05 15:33:13.431 +08:00 [DBG] Client is configured to not require consent, no consent is required
2018-11-05 15:33:13.437 +08:00 [DBG] Creating Implicit Flow response.
2018-11-05 15:33:13.446 +08:00 [DBG] Getting claims for access token for client: js
2018-11-05 15:33:13.446 +08:00 [DBG] Getting claims for access token for subject: 144d766f-e4b2-4208-9562-b45b70763d69
2018-11-05 15:33:13.526 +08:00 [DBG] Getting claims for identity token for subject: 144d766f-e4b2-4208-9562-b45b70763d69 and client: js
2018-11-05 15:33:13.527 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-11-05 15:33:13.551 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "js",
  "ClientName": "JavaScript Client",
  "RedirectUri": "http://localhost:7003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "144d766f-e4b2-4208-9562-b45b70763d69",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****kCiA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****H8xQ"
    }
  ],
  "ActivityId": "0HLI2U3E4E5EQ:00000002",
  "TimeStamp": "2018-11-05T07:33:13Z",
  "ProcessId": 1948,
  "LocalIpAddress": "::1:7001",
  "RemoteIpAddress": "::1"
}
2018-11-05 15:33:13.557 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "144d766f-e4b2-4208-9562-b45b70763d69",
  "ClientId": "js",
  "RedirectUri": "http://localhost:7003/callback.html",
  "State": "f36880e16aa244a09df6356bcb2553e8",
  "Scope": "openid profile api1"
}
2018-11-05 15:33:13.572 +08:00 [DBG] Augmenting SignInContext
2018-11-05 15:33:13.573 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-05 15:33:13.700 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-05 15:33:13.701 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-05 15:33:13.703 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-05 15:33:13.704 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-05 15:33:13.706 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-05 15:33:13.708 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-05 15:33:13.710 +08:00 [DBG] Start discovery request
2018-11-05 15:33:13.733 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:7003
2018-11-05 15:33:13.734 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-05 15:33:13.736 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-05 15:33:13.737 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-05 15:33:13.740 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-05 15:33:13.742 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-05 15:33:13.747 +08:00 [DBG] Start key discovery request
2018-11-05 15:33:13.781 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-05 15:33:13.782 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-05 15:33:13.784 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-05 15:33:13.788 +08:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:7003
2018-11-05 15:33:13.788 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-05 15:33:13.790 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-05 15:33:13.792 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-11-05 15:33:13.797 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-11-05 15:33:13.798 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-11-05 15:33:13.805 +08:00 [DBG] Start userinfo request
2018-11-05 15:33:13.809 +08:00 [DBG] Bearer token found in header
2018-11-05 15:33:13.855 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-05 15:33:13.859 +08:00 [DBG] client configuration validation for client js succeeded.
2018-11-05 15:33:13.862 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-11-05 15:33:13.865 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1541403193,
    "exp": 1541406793,
    "iss": "http://localhost:7001",
    "aud": [
      "http://localhost:7001/resources",
      "api1"
    ],
    "client_id": "js",
    "sub": "144d766f-e4b2-4208-9562-b45b70763d69",
    "auth_time": 1541403193,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2018-11-05 15:33:13.872 +08:00 [DBG] Creating userinfo response
2018-11-05 15:33:13.875 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-05 15:33:13.877 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-05 15:33:13.880 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-11-05 15:33:13.881 +08:00 [DBG] Scopes in access token: openid profile api1
2018-11-05 15:33:13.885 +08:00 [INF] Profile service returned to the following claim types: sub preferred_username name
2018-11-05 15:33:13.886 +08:00 [DBG] End userinfo request
2018-11-05 15:33:13.899 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-05 15:33:13.901 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-05 15:33:13.905 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-05 15:33:13.914 +08:00 [DBG] Rendering check session result
2018-11-05 15:33:14.043 +08:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:7003
2018-11-05 15:33:14.046 +08:00 [DBG] Client list checked and origin: http://localhost:7003 is allowed
2018-11-05 15:33:14.054 +08:00 [DBG] CorsPolicyService allowed origin: http://localhost:7003
2018-11-05 15:33:14.055 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-05 15:33:14.057 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-05 15:33:14.059 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-05 15:33:14.061 +08:00 [DBG] Start discovery request
2018-11-05 15:33:14.264 +08:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-11-05 15:33:14.265 +08:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-11-05 15:33:14.267 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-11-05 15:33:14.270 +08:00 [DBG] Rendering check session result
2018-11-05 15:33:14.381 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-11-05 15:33:14.383 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-11-05 15:33:14.385 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-11-05 15:33:14.387 +08:00 [DBG] Start discovery request
2018-11-05 15:33:14.469 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-11-05 15:33:14.471 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-11-05 15:33:14.473 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-11-05 15:33:14.476 +08:00 [DBG] Start key discovery request
2018-11-05 17:05:39.823 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception was thrown while attempting to evaluate a LINQ query parameter expression. To show additional information call EnableSensitiveDataLogging() when overriding DbContext.OnConfiguring. ---> System.InvalidOperationException: Sequence contains no elements
   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)
   at lambda_method(Closure )
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.TryExtractParameter(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression node)
   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitLambda[T](Expression`1 node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitLambda[T](Expression`1 node)
   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitUnary(UnaryExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitUnary(UnaryExpression unaryExpression)
   at System.Linq.Expressions.UnaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Dynamic.Utils.ExpressionVisitorUtils.VisitArguments(ExpressionVisitor visitor, IArgumentProvider nodes)
   at System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.ExtractParameters(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at System.Linq.Queryable.Single[TSource](IQueryable`1 source, Expression`1 predicate)
   at taggie.Controllers.UserController.EditUser(String id) in C:\can.zhang\project\taggie\taggie\Controllers\UserController.cs:line 92
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-11-05 17:10:19.798 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception was thrown while attempting to evaluate a LINQ query parameter expression. To show additional information call EnableSensitiveDataLogging() when overriding DbContext.OnConfiguring. ---> System.InvalidOperationException: Sequence contains no elements
   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)
   at lambda_method(Closure )
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.TryExtractParameter(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression node)
   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitLambda[T](Expression`1 node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitLambda[T](Expression`1 node)
   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitUnary(UnaryExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitUnary(UnaryExpression unaryExpression)
   at System.Linq.Expressions.UnaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Dynamic.Utils.ExpressionVisitorUtils.VisitArguments(ExpressionVisitor visitor, IArgumentProvider nodes)
   at System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.ExtractParameters(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at System.Linq.Queryable.Single[TSource](IQueryable`1 source, Expression`1 predicate)
   at taggie.Controllers.UserController.EditUser(String id) in C:\can.zhang\project\taggie\taggie\Controllers\UserController.cs:line 92
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-11-05 17:10:25.244 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception was thrown while attempting to evaluate a LINQ query parameter expression. To show additional information call EnableSensitiveDataLogging() when overriding DbContext.OnConfiguring. ---> System.InvalidOperationException: Sequence contains no elements
   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)
   at lambda_method(Closure )
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, String& parameterName)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.TryExtractParameter(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression node)
   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitLambda[T](Expression`1 node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitLambda[T](Expression`1 node)
   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitUnary(UnaryExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitUnary(UnaryExpression unaryExpression)
   at System.Linq.Expressions.UnaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at System.Dynamic.Utils.ExpressionVisitorUtils.VisitArguments(ExpressionVisitor visitor, IArgumentProvider nodes)
   at System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.ExtractParameters(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at System.Linq.Queryable.Single[TSource](IQueryable`1 source, Expression`1 predicate)
   at taggie.Controllers.UserController.EditUser(String id) in C:\can.zhang\project\taggie\taggie\Controllers\UserController.cs:line 92
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-11-05 17:34:43.572 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 17:34:43.601 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 17:34:43.604 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 17:34:43.604 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 17:34:43.604 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 17:34:43.604 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 17:37:22.685 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 17:37:22.716 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 17:37:22.719 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 17:37:22.719 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 17:37:22.719 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 17:37:22.719 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 17:37:39.714 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: normalizedRoleName
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.IsInRoleAsync(TUser user, String normalizedRoleName, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(TUser user, String role)
   at taggie.Controllers.UserController.EditUser(String id, EditUserViewModel model) in C:\can.zhang\project\taggie\taggie\Controllers\UserController.cs:line 123
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2018-11-05 17:39:38.954 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 17:39:38.996 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 17:39:38.999 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 17:39:38.999 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 17:39:39.000 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 17:39:39.000 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 20:12:46.834 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 20:12:46.864 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 20:12:46.866 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 20:12:46.867 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 20:12:46.867 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 20:12:46.867 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 20:14:42.314 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 20:14:42.350 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 20:14:42.353 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 20:14:42.353 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 20:14:42.354 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 20:14:42.354 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 20:26:10.719 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 20:26:10.751 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 20:26:10.753 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 20:26:10.754 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 20:26:10.754 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 20:26:10.754 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 20:27:24.402 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-05 20:27:24.406 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-05 20:27:24.407 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-05 20:27:24.408 +08:00 [INF] User logged out.
2018-11-05 20:58:00.550 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 20:58:00.578 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 20:58:00.581 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 20:58:00.581 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 20:58:00.583 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 20:58:00.584 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 21:00:15.260 +08:00 [INF] User created a new account with password.
2018-11-05 21:00:15.305 +08:00 [DBG] Augmenting SignInContext
2018-11-05 21:00:15.307 +08:00 [DBG] Adding idp claim with value: local
2018-11-05 21:00:15.307 +08:00 [DBG] Adding amr claim with value: pwd
2018-11-05 21:00:15.308 +08:00 [DBG] Adding auth_time claim with value: 1541422815
2018-11-05 21:00:15.318 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-11-05 21:00:24.057 +08:00 [INF] AuthenticationScheme: Identity.Application signed out.
2018-11-05 21:00:24.058 +08:00 [INF] AuthenticationScheme: Identity.External signed out.
2018-11-05 21:00:24.062 +08:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2018-11-05 21:00:24.070 +08:00 [INF] User logged out.
2018-11-05 21:00:30.169 +08:00 [WRN] User 634a9af5-598d-44fa-b189-68bb14d62f6d validation failed: DuplicateUserName.
2018-11-05 21:05:45.948 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 21:05:45.979 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 21:05:45.981 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 21:05:45.981 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 21:05:45.981 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 21:05:45.982 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-11-05 21:05:50.152 +08:00 [WRN] The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2018-11-05 21:05:50.158 +08:00 [WRN] The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2018-11-05 21:05:50.598 +08:00 [ERR] An exception occurred in the database while iterating the results of a query for context type 'taggie.Data.ApplicationDbContext'.
System.InvalidOperationException: A second operation started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSectionAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
System.InvalidOperationException: A second operation started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSectionAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
2018-11-05 21:05:50.612 +08:00 [ERR] An exception occurred in the database while iterating the results of a query for context type 'taggie.Data.ApplicationDbContext'.
System.AggregateException: One or more errors occurred. (A second operation started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.) ---> System.InvalidOperationException: A second operation started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSectionAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersInRoleAsync(String normalizedRoleName, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at lambda_method(Closure , QueryContext , ValueBuffer )
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ProjectionShaper.TypedProjectionShaper`3.Shape(QueryContext queryContext, ValueBuffer& valueBuffer)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()
---> (Inner Exception #0) System.InvalidOperationException: A second operation started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSectionAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersInRoleAsync(String normalizedRoleName, CancellationToken cancellationToken)<---

System.AggregateException: One or more errors occurred. (A second operation started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.) ---> System.InvalidOperationException: A second operation started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSectionAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersInRoleAsync(String normalizedRoleName, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at lambda_method(Closure , QueryContext , ValueBuffer )
   at Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ProjectionShaper.TypedProjectionShaper`3.Shape(QueryContext queryContext, ValueBuffer& valueBuffer)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()
---> (Inner Exception #0) System.InvalidOperationException: A second operation started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSectionAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersInRoleAsync(String normalizedRoleName, CancellationToken cancellationToken)<---

2018-11-05 21:12:57.281 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-11-05 21:12:57.317 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-11-05 21:12:57.320 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-11-05 21:12:57.320 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-11-05 21:12:57.321 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-11-05 21:12:57.321 +08:00 [DBG] Using Identity.Application as default scheme for forbid
